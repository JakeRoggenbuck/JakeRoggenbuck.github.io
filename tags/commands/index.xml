<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>commands on Jake Roggenbuck</title><link>https://jr0.org/tags/commands/</link><description>Recent content in commands on Jake Roggenbuck</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jr0.org/tags/commands/index.xml" rel="self" type="application/rss+xml"/><item><title>Helpful Git Commands</title><link>https://jr0.org/posts/helpful-git-commands/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://jr0.org/posts/helpful-git-commands/</guid><description>What your setup should look like (git remote -v) origin git@github.com:JakeRoggenbuck/ClubApp.git (fetch) origin git@github.com:JakeRoggenbuck/ClubApp.git (push) upstream git@github.com:aggieworks/ClubApp.git (fetch) upstream git@github.com:aggieworks/ClubApp.git (push) Getting information # list the remotes git remote -v # check your staging area git status # check commits git log Update from latest # make sure you are on your own main and don&amp;#39;t have any current changes git switch main git pull upstream main Before a feature/assignment/change git switch main git pull upstream main git switch -c feature-name Submitting a feature/assignment/change # add all changed but prevously staged files git add -u git commit git push origin feature-name</description></item></channel></rss>