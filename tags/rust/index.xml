<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on JR0.org</title><link>https://jr0.org/tags/rust/</link><description>Recent content in rust on JR0.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jr0.org/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Type safety in Rust</title><link>https://jr0.org/posts/type-safety-in-rust/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://jr0.org/posts/type-safety-in-rust/</guid><description>Here is an interesting thing that shows why compiled languages are good, specifically why Rust is great.
Take this code example that checks an enum.
from enum import Enum class Mode(Enum): Easy = 0 Hard = 1 if mode == Mode.Easy: print(&amp;#34;It&amp;#39;s easy.&amp;#34;) elif mode == Mode.Hard: print(&amp;#34;Hard mode.&amp;#34;) What happens if mode is set to None, or 2 or &amp;quot;Anything&amp;quot;. If that&amp;rsquo;s the case, neither method will be executed.</description></item></channel></rss>