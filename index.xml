<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JR0.org</title><link>https://jr0.org/</link><description>Recent content on JR0.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jr0.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Bloom filters in Rust</title><link>https://jr0.org/posts/bloom-filters/</link><pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate><guid>https://jr0.org/posts/bloom-filters/</guid><description>Intro A bloom filter is a data structure that allows you to quickly identify if some data has been previously added to the structure. What makes a bloom filter unique is that is that it gives up full accuracy for huge speed boost. A bloom filter has small false positive rate, and this rate can be decreased by using more memory and more hash algorithms, however you can find an optimal amount of memory and hash algorithm count to achieve great speed while still maintaining lower memory than a normal list.</description></item><item><title>Type safety in Rust</title><link>https://jr0.org/posts/type-safety-in-rust/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://jr0.org/posts/type-safety-in-rust/</guid><description>Here is an interesting thing that shows why compiled languages are good, specifically why Rust is great.
Take this code example that checks an enum.
from enum import Enum class Mode(Enum): Easy = 0 Hard = 1 if mode == Mode.Easy: print(&amp;#34;It&amp;#39;s easy.&amp;#34;) elif mode == Mode.Hard: print(&amp;#34;Hard mode.&amp;#34;) What happens if mode is set to None, or 2 or &amp;quot;Anything&amp;quot;. If that&amp;rsquo;s the case, neither method will be executed.</description></item><item><title>.scripts</title><link>https://jr0.org/projects/scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/scripts/</guid><description>See on GitHub
.scripts version 0.3 TODO Add description or comments on each script at the beginning Integrate these better with aliases and bashrc</description></item><item><title>.wallpaper</title><link>https://jr0.org/projects/wallpaper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/wallpaper/</guid><description>See on GitHub
.wallpaper A lot of cool wallpaper from @DonQuixano, @Camerooooon, @Shuzhengz, and myself
Contributing If you have cool wallpapers you would like to share, make a PR! Add the wallpapers to the walls/ folder Run the command to make a new cover image feh walls/ -m -y 100 -a -s -O preview.png Add the cover image (See command below) Make the PR! Ownership If you own an image and would not like it to be distributed this way, make an issue and it will be removed.</description></item><item><title>2021-software-general-homework</title><link>https://jr0.org/projects/2021-software-general-homework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/2021-software-general-homework/</guid><description>See on GitHub
2021-software-general-homework Assignments that crash immediately when run cannot be made up. All assignments will be due by the next lesson. Late assignments will be graded on a curve of 85% maximum. If you won&amp;rsquo;t be able to complete an assignment on time, slack Kate, Ludi, and/or Emily. We will not be telling you your exact grades. Instead, you will be given your grade on a &amp;ldquo;fail/needs work/pass&amp;rdquo; scale.</description></item><item><title>advent-of-code</title><link>https://jr0.org/projects/advent-of-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/advent-of-code/</guid><description>See on GitHub
advent-of-code</description></item><item><title>amethyst</title><link>https://jr0.org/projects/amethyst/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/amethyst/</guid><description>See on GitHub
A simple package manager written in ruby
Install run sh impulse.build
Help run amethyst -h</description></item><item><title>Apollo-11</title><link>https://jr0.org/projects/apollo-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/apollo-11/</guid><description>See on GitHub
Apollo-11 :crossed_flags: Bahasa Indonesia, Catal√†, Deutsch, English, Espa√±ol, Fran√ßais, Italiano, Nederlands, Polski, Portugu√™s, Rom√¢nƒÉ, Ti·∫øng Vi·ªát, T√ºrk√ße, –†—É—Å—Å–∫–∏–π, ÿßŸÑÿπÿ±ÿ®Ÿäÿ©, ŸÅÿßÿ±ÿ≥€å, ‡§π‡§ø‡§Ç‡§¶‡•Ä, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ, ·Äô·Äº·Äî·Ä∫·Äô·Ä¨, Êó•Êú¨, Ê≠£È´î‰∏≠Êñá, ÁÆÄ‰Ωì‰∏≠Êñá, ÌïúÍµ≠Ïñ¥
Original Apollo 11 guidance computer (AGC) source code for Command Module (Comanche055) and Lunar Module (Luminary099). Digitized by the folks at Virtual AGC and MIT Museum. The goal is to be a repo for the original Apollo 11 source code. As such, PRs are welcome for any issues identified between the transcriptions in this repository and the original source scans for Luminary 099 and Comanche 055, as well as any files I may have missed.</description></item><item><title>approximate-pi</title><link>https://jr0.org/projects/approximate-pi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/approximate-pi/</guid><description>See on GitHub
approximate-pi This program creates a bunch of points in a square, then draws a circle with the same radius. Then it checks which points are inside the circle. The ratio of inside to out should be around pi/4, therefor multiplying that by 4 should result in an approximation of pi.
Run Run ./cmake/approximate_pi Build Run ./scripts/build.sh Results 787961 inside the circle, 212039 outside. 3.151844 787271 inside the circle, 212729 outside.</description></item><item><title>April 2022 - Local List Business Pitch</title><link>https://jr0.org/devlogs/april-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/april-2022/</guid><description>On April 21st, the whole Local List team (Me and 4 others) got to present our business to our town&amp;rsquo;s chamber of commerce. Our idea and demo was met with lots of excitement and great feedback. The day after, we got to pitch our idea to more business owners during our school&amp;rsquo;s business project&amp;rsquo;s night event. We won the event&amp;rsquo;s Judges award for our idea and presentation. The current site can be found at thelocallist.</description></item><item><title>arch_installer</title><link>https://jr0.org/projects/arch_installer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/arch_installer/</guid><description>See on GitHub
arch_installer</description></item><item><title>area-api</title><link>https://jr0.org/projects/area-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/area-api/</guid><description>See on GitHub
Area API (Example Project) area-api is a project to teach how to create a rest api using Gin Gonic</description></item><item><title>argos-translate</title><link>https://jr0.org/projects/argos-translate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/argos-translate/</guid><description>See on GitHub
Argos Translate Docs | Website | Video intro
Open-source offline translation library written in Python. Uses OpenNMT for translations, SentencePiece for tokenization, Stanza for sentence boundary detection, and PyQt for GUI. Designed to be used as either a Python library, command-line, or GUI application. LibreTranslate is an API and web-app built on top of Argos Translate.
Argos Translate supports installing model files which are a zip archive with an &amp;ldquo;.</description></item><item><title>asmura</title><link>https://jr0.org/projects/asmura/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/asmura/</guid><description>See on GitHub
Source code for an RPG game To run the game, type &amp;ldquo;java -jar asmura.jar&amp;rdquo; in terminal The application opens with a black background (menu screen). To enter &amp;ldquo;main game&amp;rdquo;, press enter (white background), and press q to toggle between main game and escaped screen (gray background).</description></item><item><title>August 2022</title><link>https://jr0.org/devlogs/august-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/august-2022/</guid><description>Work I just finished a month of work at Lucid Automation. I have been working with Go using Gin-Gonic and React JS. I have also been working with Keras and Tensorflow in Python. It has been an amazing experience and I have learned tons already.
Hackathons In this month, I also did two hackathons, Plant Here and Future Fire Finder.
1. Plant Here üåø The first was a project called Plant here.</description></item><item><title>auth-upload-rest-go</title><link>https://jr0.org/projects/auth-upload-rest-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/auth-upload-rest-go/</guid><description>See on GitHub
auth-upload-rest-go Authenticated REST server written in Go.
Usage Upload files to a dedicated server for file sharing, etc.</description></item><item><title>auto-clock-speed</title><link>https://jr0.org/projects/auto-clock-speed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/auto-clock-speed/</guid><description>See on GitHub
ACS Upstream - autoclockspeed.org - Our crates.io - ACS GitHub Org A utility to check stats about your CPU, and auto regulate clock speeds to help with either performance or battery life. This proram is designed for Linux and Intel laptops, although it should theoretically work on AMD systems and sometimes desktops as well. If you encounter any issues or bugs, please refer to the wiki to see if there is a solution.</description></item><item><title>autoclockspeed.github.io</title><link>https://jr0.org/projects/autoclockspeed.github.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/autoclockspeed.github.io/</guid><description>See on GitHub
autoclockspeed.github.io</description></item><item><title>bash_startup</title><link>https://jr0.org/projects/bash_startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/bash_startup/</guid><description>See on GitHub
bash_startup More complex things I want to run when my bashrc runs (external scripts) bash_startup Description There are two scripts, the first bash_startup are written in crystal and c++. This script will search through my bashrc and find aliases
Example start_alias_show () { bash_startup_cpp } # Checks if bash_startup_cpp is installed, then run it if [ 2&amp;gt;/dev/null 1&amp;gt;/dev/null $(which bash_startup_cpp) ]; then start_alias_show else echo &amp;#34;Install bash_startup_cpp and add it to your PATH&amp;#34; fi cheat_sheet_startup Description The second script is cheat_sheet_startup and will pull cheat sheets from cht.</description></item><item><title>BestNextStep</title><link>https://jr0.org/projects/bestnextstep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/bestnextstep/</guid><description>See on GitHub
Best Next Step Keep track of where you are on projects and what your Best Next Step is.
Why Do you ever leave a project to focus on school, work, life, or other projects? The constant shifting from one project to another can lead to forgetting where to start up from. This app helps you keep track of your next steps and helps you plan ahead.
History This repository was created on Arpil 28th in 2019 but never was pushed to and no code was written.</description></item><item><title>BestVimPlugins</title><link>https://jr0.org/projects/bestvimplugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/bestvimplugins/</guid><description>See on GitHub
Themes These are some great themes. I only use gruvbox right now but the rest of these themes are great. morhetz/gruvbox https://github.com/morhetz/gruvbox baskerville/bubblegum https://github.com/baskerville/bubblegum mhartington/oceanic-next https://github.com/mhartington/oceanic-next cocopon/iceberg.vim https://github.com/cocopon/iceberg.vim drewtempelmeyer/palenight.vim https://github.com/drewtempelmeyer/palenight.vim roosta/srcery https://github.com/roosta/srcery joshdick/onedark.vim https://github.com/joshdick/onedark.vim ajh17/spacegray.vim https://github.com/ajh17/spacegray.vim Appearance These make vim look really nice, the goyo is great for taking screenshots and just having a distraction free work time.
vim-airline/vim-airline https://github.com/ajh17/spacegray.vim vim-airline/vim-airline-themes https://github.com/vim-airline/vim-airline-themes junegunn/goyo.vim https://github.com/junegunn/goyo.vim Movement These are great for making editing speedy</description></item><item><title>better-scripts</title><link>https://jr0.org/projects/better-scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/better-scripts/</guid><description>See on GitHub
better-scripts Scripts that are better than the ones I wrote a long time ago
Docs Docs for each script can be found it its directory.
Install sh ./install.sh Bin Installing will write the scripts to bin/
Goals The goal with this repository is to have better documentation, readability, and functionality than the old repository.</description></item><item><title>bookmark-search</title><link>https://jr0.org/projects/bookmark-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/bookmark-search/</guid><description>See on GitHub
Bookmark search A simple thing to allow you to search your bookmarks better than any browser default bookmark search
Install meilisearch REST API from https://github.com/meilisearch/MeiliSearch and meilisearch with pip</description></item><item><title>BrainF</title><link>https://jr0.org/projects/brainf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/brainf/</guid><description>See on GitHub
BrainF Turn jaker into hello with
&amp;gt;,--.&amp;gt;,++++.&amp;gt;,+.&amp;gt;,+++++++.&amp;gt;,---. Caeser cipher with
&amp;gt;+[&amp;gt;,+++.] Print a lot of weird stuff with a loop
&amp;gt;+[+.]</description></item><item><title>break</title><link>https://jr0.org/projects/break/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/break/</guid><description>See on GitHub
break When automating your workflow, build systems and ci are some of the most important parts. Break is analogous to a build system, and test suite. Break, will insure your tests fail by irreversibly destroying your executables and source code according to your breakfile. It will also prepare the source code by breaking the files before tests. Break is blazing fast, and it&amp;rsquo;s unique functionality allows for a streamlined workflow.</description></item><item><title>broken-package-yf</title><link>https://jr0.org/projects/broken-package-yf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/broken-package-yf/</guid><description>See on GitHub
broken-package-yf An example broken package
Install yfin install jakeroggenbuck/broken-package-yf</description></item><item><title>bspswallow</title><link>https://jr0.org/projects/bspswallow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/bspswallow/</guid><description>See on GitHub
bspswallow Adds functionality provided by the dwm &amp;ldquo;swallow&amp;rdquo; patch to bspwm.
Dependencies bspwm (obviously) xprop Installation Add two files to ~/.config/bspwm
noswallow - list of classes of windows that you don&amp;rsquo;t want to swallow the terminal
terminals - list of classes of terminals that you want to be swallowed
If a class isn&amp;rsquo;t available (such as with xev) then the command of origin can be used.
(example files are included in &amp;ldquo;examples&amp;rdquo;)</description></item><item><title>calcLex</title><link>https://jr0.org/projects/calclex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/calclex/</guid><description>See on GitHub
calcLex A simple lexer using a yacc.</description></item><item><title>car-lights</title><link>https://jr0.org/projects/car-lights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/car-lights/</guid><description>See on GitHub
car-lights</description></item><item><title>Cardinal</title><link>https://jr0.org/projects/cardinal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cardinal/</guid><description>See on GitHub
Cardinal Cardinal is a web server that serves data from the frc1678/server project to the frc1678/viewer project.
Use There are two main uses for Cardinal. Both involve serving data to the Viewer app. The most important data that is sent is from the frc1678/server project and is current match and competition data. The second type of data is auto generated testing data.
Setup Export the value DJANGO_SECRET_KEY before running</description></item><item><title>CError</title><link>https://jr0.org/projects/cerror/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cerror/</guid><description>See on GitHub
CError Run cerror on a source code file of a compiled language to get the length of the outputted error compared to the filesize. Some people try to get the largest error with the smallest file, this script gives you a score for this.
Use (in general) #include __FILE__ The sample file is above, this is a small amount of source but produces a large error. This would get a really good score because of that ratio of code to error.</description></item><item><title>ChatApp</title><link>https://jr0.org/projects/chatapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/chatapp/</guid><description>See on GitHub
ChatApp Running cd src/ python3 app.py then open http://127.0.0.1:5000/</description></item><item><title>chi-squared-c</title><link>https://jr0.org/projects/chi-squared-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/chi-squared-c/</guid><description>See on GitHub
chi-squared-c Equation Œß^2 = ((O - E)^2) / E</description></item><item><title>ChromeWebLauncher</title><link>https://jr0.org/projects/chromeweblauncher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/chromeweblauncher/</guid><description>See on GitHub
ChromeWebLauncher</description></item><item><title>claculator</title><link>https://jr0.org/projects/claculator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/claculator/</guid><description>See on GitHub
claculator adds numbers together
A joke if you couldn&amp;rsquo;t tell</description></item><item><title>cli</title><link>https://jr0.org/projects/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cli/</guid><description>See on GitHub
GitHub CLI gh is GitHub on the command line. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.
Availability GitHub CLI is available for repositories hosted on GitHub.com and GitHub Enterprise Server 2.20+, and to install on macOS, Windows, and Linux.
Documentation Read the official docs for usage and more information.
We want your feedback We&amp;rsquo;d love to hear your feedback about gh.</description></item><item><title>Clifford</title><link>https://jr0.org/projects/clifford/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/clifford/</guid><description>See on GitHub
Clifford Attractors</description></item><item><title>Clubs</title><link>https://jr0.org/p/clubs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/clubs/</guid><description>QME Games I am project manager for the QME Games group. https://github.com/qmegame/
Software Club President of a club dedicated to teaching members of the DVCA High School how to write useful software and prepare for industry. https://jr0.org/p/software-club
DHS Gamedev Project manager for the DHS game development club. https://github.com/dhs-gamedev/
DHS Coding Club Project manager &amp;amp; presenter for the DHS Coding Club. https://github.com/dhs-gamedev/
DV-CSHS I am the president of the Da Vinci Computer Science Honors Society https://sites.</description></item><item><title>codinggames</title><link>https://jr0.org/projects/codinggames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/codinggames/</guid><description>See on GitHub
codinggames is a repo dedicated to all (simple) open-source games. Feel free to add your own, and make sure to do bug tests and/or make suggestions for existing games!</description></item><item><title>colorgradient</title><link>https://jr0.org/projects/colorgradient/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/colorgradient/</guid><description>See on GitHub
colorgradient Python version colorgradient Rust version colorgradient-rs Julia version colorgradient-julia C version colorgradient-c Go version colorgradient-go TODOS Make docs for usage, output, running, and testing</description></item><item><title>colorgradient-c</title><link>https://jr0.org/projects/colorgradient-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/colorgradient-c/</guid><description>See on GitHub
colorgradient-c Python version colorgradient Rust version colorgradient-rs Julia version colorgradient-julia C version colorgradient-c Go version colorgradient-go</description></item><item><title>colorgradient-go</title><link>https://jr0.org/projects/colorgradient-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/colorgradient-go/</guid><description>See on GitHub
colorgradient-go Python version colorgradient Rust version colorgradient-rs Julia version colorgradient-julia C version colorgradient-c Go version colorgradient-go</description></item><item><title>colorgradient-julia</title><link>https://jr0.org/projects/colorgradient-julia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/colorgradient-julia/</guid><description>See on GitHub
colorgradient-julia Python version colorgradient Rust version colorgradient-rs Julia version colorgradient-julia C version colorgradient-c Go version colorgradient-go # Find the slope of two point find_slope(x1, y1, x2, y2) = (y2 - y1) / (x2 - x1) # Find the closest whole numbers on both sides of a x neighbors(x) = round(x), ceil(x) # Find the predicted value of y given a value x function find_y(x, known_x) # Check if the given value is exactly one in the known list if round(x) == x return known_x[x] end left_x, right_x = neighbors(x) left_y = known_x[left_x] right_y = known_x[right_x] slope = find_slope(left_x, left_y, right_x, right_y) return left_y + (slope * (x - left_x)) end</description></item><item><title>colorgradient-rs</title><link>https://jr0.org/projects/colorgradient-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/colorgradient-rs/</guid><description>See on GitHub
colorgradient-rs Python version colorgradient Rust version colorgradient-rs Julia version colorgradient-julia C version colorgradient-c Go version colorgradient-go Install git clone https://github.com/JakeRoggenbuck/colorgradient-rs cargo install --path colorgradient-rs Test cargo test Code fn calculate_gradient(num: i64, original_colors: Vec&amp;lt;RGB&amp;gt;) -&amp;gt; Vec&amp;lt;RGB&amp;gt; { // Get the needed step value to fit the num of iterations in the original_colors length let step: f32 = (original_colors.len() as f32 - 1.0) / num as f32; let channels = get_channels(original_colors); let mut colors = Vec::&amp;lt;RGB&amp;gt;::new(); for i in 0.</description></item><item><title>cosmic-ray-detector</title><link>https://jr0.org/projects/cosmic-ray-detector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cosmic-ray-detector/</guid><description>See on GitHub
Cosmic Ray Detector If I find a cosmic ray with this, I will publish a paper about it.
Build ./scripts/build.sh Install ./scripts/install.sh</description></item><item><title>covers</title><link>https://jr0.org/projects/covers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/covers/</guid><description>See on GitHub
CoveRs Code coverage for Rust in Rust</description></item><item><title>Covid19-cases-tui</title><link>https://jr0.org/projects/covid19-cases-tui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/covid19-cases-tui/</guid><description>See on GitHub
Covid19-cases-tui Simple tui for seeing Covid-19 cases This script uses herokuapp&amp;rsquo;s api for data https://covid2019-api.herokuapp.com/</description></item><item><title>cproc</title><link>https://jr0.org/projects/cproc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cproc/</guid><description>See on GitHub
cproc A small C preprocessor, written in C.
#define A 4 // New code int main() { int main() { int x = A; -&amp;gt; int x = 4; } } build ./scripts/build.sh run ./build/cproc</description></item><item><title>cpython</title><link>https://jr0.org/projects/cpython/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cpython/</guid><description>See on GitHub
404: Not Found</description></item><item><title>cruz-lang</title><link>https://jr0.org/projects/cruz-lang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cruz-lang/</guid><description>See on GitHub
Cruzlang Cruz Lang is a simple explicit static typed language. The compiler written in python is called shark and uses ply.lex for lexical analysis. It has 5 primitive data types:
Data types byte one byte of data char one ASCII character int a 32 bit integer prec a number with a decimal point of 4 bytes ptr a 4 byte pointer address Other key words fun the function key word while a while loop write output as stdout read input as stdin with uses external files if do something if condition true elif else do something if condition true else else do something takes place for parameters and types return a return returns tells function what type to return Here is the syntax: Syntax</description></item><item><title>Crypto-Chat</title><link>https://jr0.org/projects/crypto-chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/crypto-chat/</guid><description>See on GitHub
Crypto-Chat Setup To get started with cryptochat you first need to have firebase installed To do so just run pip install --user firebase
Use The chat will prompt you with Mode de/en: This is asking if you are decrypting a message or encrypting a message Then if you are encrypting it will ask you for your message then a key If you are decrypting it will ask for a key then it will print out all the messages decrypted by your key.</description></item><item><title>crystal-colord</title><link>https://jr0.org/projects/crystal-colord/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/crystal-colord/</guid><description>See on GitHub
crystal-colord A library for colored text in crystal
Installation Add the dependency to your shard.yml:
dependencies: crystal-colord: github: jakeroggenbuck/crystal-colord Run shards install
Usage require &amp;#34;crystal-colord&amp;#34; message = CrystalColord::Colord.new &amp;#34;Hey&amp;#34; message.cyan(background=true) message.black puts message.bold Contributing Fork it (https://github.com/jakeroggenbuck/crystal-colord/fork) Create your feature branch (git checkout -b my-new-feature) Commit your changes (git commit) Push to the branch (git push origin my-new-feature) Create a new Pull Request Contributors jakeroggenbuck - creator and maintainer</description></item><item><title>cutil</title><link>https://jr0.org/projects/cutil/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cutil/</guid><description>See on GitHub
Cutil Cutil is a rewrite of the gnu core utils, also in C. Written by Adam Hutchings and Jake Roggenbuck.
List ls.c nl.c yes.c head.c help.c clear.c</description></item><item><title>cve-bin-tool</title><link>https://jr0.org/projects/cve-bin-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/cve-bin-tool/</guid><description>See on GitHub
CVE Binary Tool quick start / README The CVE Binary Tool is a free, open source tool to help you find known vulnerabilities in software, using data from the National Vulnerability Database (NVD) list of Common Vulnerabilities and Exposures (CVEs).
The tool has two main modes of operation:
A binary scanner which helps you determine which packages may have been included as part of a piece of software.</description></item><item><title>daily-tasks</title><link>https://jr0.org/projects/daily-tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/daily-tasks/</guid><description>See on GitHub
Daily Tasks Teaching Svelte and FastAPI
Frontend (Javascript with Svelte) Backend (Python with FastAPI)</description></item><item><title>dark-discord</title><link>https://jr0.org/projects/dark-discord/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dark-discord/</guid><description>See on GitHub
dark-discord An actual dark theme for Discord
Requirements BetterDiscord is required to be installed
Betterdiscordctl might be a handy tool to install BetterDiscord on Linux
Install Instructions Install as a theme Go to the Themes tab in Discord&amp;rsquo;s settings (BetterDiscord section) Click on the Open Theme Folder button Drag dark-discord.theme.css into the folder Go back to the Themes tab in Discord&amp;rsquo;s settings, enable the theme with the switch Install as a custom CSS The custom CSS option can be useful if your install of betterdiscord is bugged or not supported fully</description></item><item><title>dcbankofcarter</title><link>https://jr0.org/projects/dcbankofcarter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dcbankofcarter/</guid><description>See on GitHub
dcbankofcarter</description></item><item><title>December 2022</title><link>https://jr0.org/devlogs/december-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/december-2022/</guid><description>New projects I created a program to learn linearization.
Salt is another project (Symbol And Lexer Toolkit). Salt aims to lex and tokenize c source code for three reasons.
Make auto include suggestions for file and libraries Check where every imported symbol is from and warn if imports aren&amp;rsquo;t needed Generate documentation of a library in a c file School I spent a lot of time this month working on school projects and preparing for finals.</description></item><item><title>Deepai</title><link>https://jr0.org/projects/deepai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/deepai/</guid><description>See on GitHub
Deepai Use Run p main.py -i ~/Downloads/input_image.jpg -o image.png -n NeuralStyle -s ~/Downloads/vangohg.png Run p main.py -i ~/Downloads/input_image.jpg -o image.png -n DeepDream
from main import DeepImage # NeuralStyle style_name = &amp;#34;NeuralStyle&amp;#34; input_file = &amp;#34;~/Downloads/input_image.png&amp;#34; output_file = &amp;#34;~/Downloads/output_image.png&amp;#34; style_image = &amp;#34;~/Downloads/style_image.png&amp;#34; deep = Deep(style_name, input_file, output_file, style_image) # DeepDream style_name = &amp;#34;DeepDream&amp;#34; input_file = &amp;#34;~/Downloads/input_image.png&amp;#34; output_file = &amp;#34;~/Downloads/output_image.png&amp;#34; deep = Deep(style_name, input_file, output_file) deep.download() Config Make the config and get an api key at deepai.</description></item><item><title>derive</title><link>https://jr0.org/projects/derive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/derive/</guid><description>See on GitHub
derive Calculate the derivative of a function non-algebraically
Build Run ./scripts/build.sh Config You can replace this function with anything you would like to find the derivative of.
double function(double x) { // f(x) = x^3 + 4x + 2 return (pow(x, 3) + 4 * x) + 2; } Run Run ./cmake/derive &amp;gt; data/out.csv Run python3 plotting/main.py</description></item><item><title>Dictionary-tui</title><link>https://jr0.org/projects/dictionary-tui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dictionary-tui/</guid><description>See on GitHub
Dictionary-tui Api Key First go to https://dictionaryapi.com/ Then follow their instructions to get an api key
Setup Create a file named api_key.py and in it make a var called key, set it to &amp;ldquo;your api key&amp;rdquo;
Output example Word: fast fast Synonyms apace briskly chop-chop double-quick fleetly full tilt hastily hell-for-leather hot lickety-split posthaste presto pronto quick quickly rapidly snappily soon speedily swift swiftly Antonyms slow slowly</description></item><item><title>directory-info</title><link>https://jr0.org/projects/directory-info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/directory-info/</guid><description>See on GitHub
Diri DIRectory Info tool that lets you look at a summary of a directory and which projects are using a version control system and if they are connected to a remote control system.
New C Version diri-c
One could even alias this to ls (Not recommended)</description></item><item><title>diri-c</title><link>https://jr0.org/projects/diri-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/diri-c/</guid><description>See on GitHub
Diri-c DIRectory Info tool written in C that lets you look at a summary of a directory and which projects are using a version control system and if they are connected to a remote control system.
Why? because&amp;hellip; I have too many directories
Some of these are local git repos with github remotes, some are git repos with no remotes, and some are not using git at all.</description></item><item><title>discord_keep_save</title><link>https://jr0.org/projects/discord_keep_save/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/discord_keep_save/</guid><description>See on GitHub
discord_keep_save Running python3 main.py
Use Type ;s message to save
Setup DB On startup main.py does checks and setups for critical components
Discord Add bot token to a file called token.txt</description></item><item><title>dmenuSpecialCharacterCopier</title><link>https://jr0.org/projects/dmenuspecialcharactercopier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dmenuspecialcharactercopier/</guid><description>See on GitHub
dmenuSpecialCharacterCopier</description></item><item><title>door-lock</title><link>https://jr0.org/projects/door-lock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/door-lock/</guid><description>See on GitHub
door-lock TODOS Add an example and running info</description></item><item><title>dot_dropper</title><link>https://jr0.org/projects/dot_dropper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dot_dropper/</guid><description>See on GitHub
dot_dropper Deprecated for my new stow-squid</description></item><item><title>dotfiles</title><link>https://jr0.org/projects/dotfiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dotfiles/</guid><description>See on GitHub
dotfiles A collection of my dotfiles that I use on my GNU/Linux machine Both Arch (current Laptop and Desktop) and Ubuntu (Old Desktop). I also used some of these dotfiles on MacOS, and exclusivly used yabai and skhd on that machine Tools I use a tool I made called stow-squid to manage the updating and deplying of my dotfiles The config for that can be found also in the repo here Configs Nvim, Tmux, Alacritty Bspwm, Sxhkd, Skhd, Yabai (Window managers and keybinds)</description></item><item><title>dotfiles-1</title><link>https://jr0.org/projects/dotfiles-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dotfiles-1/</guid><description>See on GitHub
404: Not Found</description></item><item><title>draft.vim</title><link>https://jr0.org/projects/draft.vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/draft.vim/</guid><description>See on GitHub
Draft.vim Quickly writeup and save drafts for messaging apps in your favorite editor vimawesome.com/plugin/draft-vim
Why use Draft.vim I often write important messages in a vim buffer before I send it.
The main reason for this is because it is simply faster. The second reason is you might want syntax highlighting or auto formating. Also, sometimes you want to write a message without worrying about accidentally sending it. Requirements Pandoc wkhtmltopdf Dragon (https://github.</description></item><item><title>dragon</title><link>https://jr0.org/projects/dragon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dragon/</guid><description>See on GitHub
404: Not Found</description></item><item><title>DV Game Jam 2022</title><link>https://jr0.org/events/dv-game-jam-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/events/dv-game-jam-2022/</guid><description>This was the first annual Da Vinci Game Jam.
Here are some resources: PyGame Intro Slides - Slides for a simple ocean game demo in Python for DV Game Jam
P5.js Intro Slides - Slides for a simple ocean game demo in Javascript for DV Game Jam
PyGame Intro Code - Codes for a simple ocean game demo in Python for DV Game Jam
P5.js Intro Code - Code for a simple ocean game demo in Javascript for DV Game Jam</description></item><item><title>dwm</title><link>https://jr0.org/projects/dwm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/dwm/</guid><description>See on GitHub
404: Not Found</description></item><item><title>f09f</title><link>https://jr0.org/projects/f09f/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/f09f/</guid><description>See on GitHub
f09f pronounced fonf; is a simple statically typed language with simple but powerful syntax Include include standio; Byte byte name = 10000000; Byte array byte[] name; byte name = [10000000, 10000001]; Char char letter = &amp;#39;A&amp;#39;; Char array char[] letter; char letter = [&amp;#39;A&amp;#39;, &amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;]; Int int number = 4; Int array int[] numbers; int numbers = [2, 5, 4]; Prec prec percent = 3.4; Prec array int[] precise_numbers; int precise_numbers = [3.</description></item><item><title>f09f-rs</title><link>https://jr0.org/projects/f09f-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/f09f-rs/</guid><description>See on GitHub
f09f-rs pronounced fonf; is a statically typed language with simple but powerful syntax, and an interpreter written in rust
Install git clone https://github.com/JakeRoggenbuck/f09f-rs cargo install --path f09f-rs Usage Shorthand Flag Description -v Verbose output of tokens Syntax Vars int fact = 0; prec dec = 0.2; string this = &amp;#34;a string&amp;#34;; bool is_it = true; Functions fun square(int n) returns int { ~ Return the square of n ~ return n ^ n; } Control flow if (n == 0) { n = 1; } if (this and not that) { x = 1; } if (this or that) { x = 1; } if (this) { that = false; } else { that = true; }</description></item><item><title>fastly-py</title><link>https://jr0.org/projects/fastly-py/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/fastly-py/</guid><description>See on GitHub
Fastly Python Client fastly-py is available through pip as the fastly package
There are three simple scripts provided in /bin that can be used for various stand-alone purge operations.
A Note About Authentication Authenticating with an API Token is shown in the example below. For more information on API Tokens, please see Fastly&amp;rsquo;s API Token documentation. For more information about authenticating to our API, please see our Authentication section.</description></item><item><title>February 2022 - Creating Dev Log Page</title><link>https://jr0.org/devlogs/february-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/february-2022/</guid><description>This months has been pretty interesting. I have learned several things like how to use Gatsby and GraphQL. I have been working on auto-clock-speed a lot, and I 0.1.8 was released! I have also been writing code for the Hermes project. This months I picked up the book &amp;lsquo;Design Patterns&amp;rsquo; and it&amp;rsquo;s great. Something that I have been using more often is React. Sometimes I forget how useful a good frontend framework can be.</description></item><item><title>firefox-landing-page</title><link>https://jr0.org/projects/firefox-landing-page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/firefox-landing-page/</guid><description>See on GitHub
landing-page</description></item><item><title>firefox-landing-page-1</title><link>https://jr0.org/projects/firefox-landing-page-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/firefox-landing-page-1/</guid><description>See on GitHub
Landing Page Clone the library to your computer
git clone git@github.com:Camerooooon/landing-page.git Now set the homepage of your browser to the location of the index.html file on your computer. You may need to use an extention for chrome. Inorder to control which search engine you want to use you must use the left and right arrow keys.
This idea was inspired by JakeRoggenbuck&amp;rsquo;s landing page repo.</description></item><item><title>firefoxThemes</title><link>https://jr0.org/projects/firefoxthemes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/firefoxthemes/</guid><description>See on GitHub
firefoxThemes</description></item><item><title>flask-sql-login</title><link>https://jr0.org/projects/flask-sql-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/flask-sql-login/</guid><description>See on GitHub
flask-sql-login</description></item><item><title>FlaskSQLApp</title><link>https://jr0.org/projects/flasksqlapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/flasksqlapp/</guid><description>See on GitHub
FlaskSQLApp</description></item><item><title>flowerknight</title><link>https://jr0.org/projects/flowerknight/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/flowerknight/</guid><description>See on GitHub
flowerknight Overview This is a game we are making over the summer as a demo for our club. In the game, you are a knight who needs to protect and transport a flower.
Details We are using Java 16 and OpenGL
Contributing All PRs must have two reviews before merge, and changes to the code (things in src) must have a corresponding issue attached. All PRs must have one test at least, PRs are subject to added review specs, for example, &amp;ldquo;test on mac&amp;rdquo; or &amp;ldquo;test on all platforms&amp;rdquo;.</description></item><item><title>fork-craft</title><link>https://jr0.org/projects/fork-craft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/fork-craft/</guid><description>See on GitHub
fork-craft</description></item><item><title>fred</title><link>https://jr0.org/projects/fred/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/fred/</guid><description>See on GitHub
fred Like GnuShred, Fred overwrites files to make them harder to read using the string &amp;lsquo;fred&amp;rsquo; This is just a test because this is my first time writing in ruby</description></item><item><title>fumble_api</title><link>https://jr0.org/projects/fumble_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/fumble_api/</guid><description>See on GitHub
fumble_api A simple web API to return critical charts for the game dnd 5e
Running python3 main.py
Data manipulation (setup) import data # Clear all the data in the db data.clear_data() # Upload the new data in the list (fumble_data) data.upload_data(data.fumble_data) Routes Find table names at / / -&amp;gt; shooting, melee /shooting/12 -&amp;gt; &amp;ldquo;Ooops!&amp;rdquo; + &amp;ldquo;You hit an unintended random target.&amp;quot; &amp;lt;table name&amp;gt;/&amp;lt;number 1-20&amp;gt;</description></item><item><title>GalapagosReefOctopus</title><link>https://jr0.org/projects/galapagosreefoctopus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/galapagosreefoctopus/</guid><description>See on GitHub
GalapagosReefOctopus</description></item><item><title>game-2021</title><link>https://jr0.org/projects/game-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/game-2021/</guid><description>See on GitHub
game-2021 This is the repository for the Davis Senior High School Gamedev game of the 2021-22 school year.
Build Instructions Dependencies This project wil be done with OpenGL, and as such has the dependencies of OpenGL and GLFW. If you are using macOS, the OpenGL component is not required as it comes with the installation.
Build ./scripts/build.sh
Run ./scripts/run.sh</description></item><item><title>game-design-scoring</title><link>https://jr0.org/projects/game-design-scoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/game-design-scoring/</guid><description>See on GitHub
Game Design Scoring Regression Model Data The data that this model used to train is the csv ./point-weighting-combined-new.csv and was made in a spreedsheet
Building the model Run the script ./generate_model.py to build the model
Usage To run the model that you built, this is all the code needed
from tensorflow import keras import numpy as np import csv from generate_model import get_data_Y, get_data_X # Import the model made by .</description></item><item><title>git-lesson</title><link>https://jr0.org/projects/git-lesson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/git-lesson/</guid><description>See on GitHub
Repository for 1678 Software General git lesson</description></item><item><title>git-training</title><link>https://jr0.org/projects/git-training/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/git-training/</guid><description>See on GitHub
git-training Git(hub) training for Scouting Programmers</description></item><item><title>gnome-clocks</title><link>https://jr0.org/projects/gnome-clocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/gnome-clocks/</guid><description>See on GitHub
404: Not Found</description></item><item><title>gosense</title><link>https://jr0.org/projects/gosense/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/gosense/</guid><description>See on GitHub
sense-go Sense the directories around you, are they git repositories, what language, etc.
Languages :snake: sense-py || :crab: sense-rs || :hamster: gosense || üá® sense-c
Why? Why so many langs? Because I write projects pretty regularly in all of these languages and want a consistent API and available library support for all of them.
API Git has_git(path string) bool is_local_git(path string) bool Language get_lang(path string) Lang Example func main() { lang := get_lang(&amp;#34;.</description></item><item><title>gpg_passkeep</title><link>https://jr0.org/projects/gpg_passkeep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/gpg_passkeep/</guid><description>See on GitHub
gpg_passkeep TODO: Add config file Add save directory</description></item><item><title>GPGExchange</title><link>https://jr0.org/projects/gpgexchange/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/gpgexchange/</guid><description>See on GitHub
GPGExchange Website for posting encrypted files, encrypted meme exchange.</description></item><item><title>gpt-2</title><link>https://jr0.org/projects/gpt-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/gpt-2/</guid><description>See on GitHub
gpt-2 Code from the paper &amp;ldquo;Language Models are Unsupervised Multitask Learners&amp;rdquo;.
We have currently released small (117M parameter) and medium (345M parameter) versions of GPT-2. While we have not released the larger models, we have released a dataset for researchers to study their behaviors.
See more details in our blog post.
Usage This repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.</description></item><item><title>hash-colorer</title><link>https://jr0.org/projects/hash-colorer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/hash-colorer/</guid><description>See on GitHub
hash-colorer View hashes as colors Use Pipe something to hashc e.g. sha256sum file | hashc
Install Run ./install.sh as root</description></item><item><title>hermes</title><link>https://jr0.org/projects/hermes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/hermes/</guid><description>See on GitHub
Hermes Hermes is a project in C++ to help individuals with ALS communicate.</description></item><item><title>HexViewer</title><link>https://jr0.org/projects/hexviewer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/hexviewer/</guid><description>See on GitHub
HexViewer Better rust version: https://github.com/JakeRoggenbuck/hexviewer-rs
python3 main.py -i video.mp4</description></item><item><title>hexviewer-rs</title><link>https://jr0.org/projects/hexviewer-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/hexviewer-rs/</guid><description>See on GitHub
hexviewer-rs Hexviewer allows you to quickly view the hex representation of a file with vim style keybinds Install git clone https://github.com/JakeRoggenbuck/hexviewer-rs cargo install --path hexviewer-rs</description></item><item><title>Highlight</title><link>https://jr0.org/projects/highlight/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/highlight/</guid><description>See on GitHub
404: Not Found</description></item><item><title>hyper-minimal-loaders</title><link>https://jr0.org/projects/hyper-minimal-loaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/hyper-minimal-loaders/</guid><description>See on GitHub
hyper-minimal-loaders A hyper minimal loader bar only 1.62 KB source.</description></item><item><title>ice</title><link>https://jr0.org/projects/ice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ice/</guid><description>See on GitHub
Ice Programming language and interpreter
NAME ice SYNOPSIS ice GROUP | COMMAND GROUPS GROUP is one of the following: ice COMMANDS COMMAND is one of the following: run step print &amp;#34;this&amp;#34; input &amp;#34;that: &amp;#34; print &amp;#34;this and that&amp;#34; int &amp;#34;856&amp;#34; str &amp;#34;hey&amp;#34; str $0 print $1 calc $1 + $1 dump</description></item><item><title>ImgurApi</title><link>https://jr0.org/projects/imgurapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/imgurapi/</guid><description>See on GitHub
ImgurApi from main import Imgur # Create object imgur = Imgur() # Upload image imgur.upload(&amp;#34;test.jpg&amp;#34;) # Get viewable images (Not Blocked Not Deleted) imgur.get_viewable_images() # Block image by hash (Know as &amp;#34;id&amp;#34;) imgur.block(&amp;#34;&amp;lt;image hash&amp;gt;&amp;#34;) # Delete image by hash (Know as &amp;#34;id&amp;#34;) imgur.delete(&amp;#34;&amp;#34;) # View all things in the uploaded collection imgur.view()</description></item><item><title>importlint</title><link>https://jr0.org/projects/importlint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/importlint/</guid><description>See on GitHub
ImportLint Check and fix your module and package imports in python files
Use Check importlint check test.py
fix importlint fix test.py
Install pip install importlint
TODO Make command line interface for Audit file (Done) Correct file in place (Done) Make features: a = can audit, c = can correct [c] Sort imports alphabetically [a] Check for use of * in imports [] Check for unused imports [] Check for no imports for used module [] Consolidate multiple similar imports into one line Package for pypi Make a setup.</description></item><item><title>impulse</title><link>https://jr0.org/projects/impulse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/impulse/</guid><description>See on GitHub
impulse Install Run ./impulse.build with root permissions
Use Read the man page</description></item><item><title>indirect-git-repo</title><link>https://jr0.org/projects/indirect-git-repo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/indirect-git-repo/</guid><description>See on GitHub
404: Not Found</description></item><item><title>inflector</title><link>https://jr0.org/projects/inflector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/inflector/</guid><description>See on GitHub
404: Not Found</description></item><item><title>integrate</title><link>https://jr0.org/projects/integrate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/integrate/</guid><description>See on GitHub
integrate Build Run ./scripts/build.sh Config You can replace this function with anything you would like to find the antiderivative of.
double function(double x) { // f(x) = x^3 + 4x + 2 return (pow(x, 3) + 4 * x) + 2; } Run Run ./cmake/derive &amp;gt; data/out.csv Run python3 plotting/main.py</description></item><item><title>is_254_or_larger</title><link>https://jr0.org/projects/is_254_or_larger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/is_254_or_larger/</guid><description>See on GitHub
is_254_or_larger About An npm package to determine whether a number is 254 or larger
View the official npm package https://www.npmjs.com/package/is_254_or_larger</description></item><item><title>jai</title><link>https://jr0.org/projects/jai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jai/</guid><description>See on GitHub
Jai Our entry to the langjam
Requirements: Rust &amp;amp; Python
Pip requirements: run
pip install -r requirements.txt Build instructions Build the lexer crate with
maturin build Install lexer with
pip install ./target/wheels/jai-0.1.1-* # Add a `--force-reinstall` if reinstalling Troubleshooting If you get something saying maturin command not found after you install it via pip. Try using python3 -m pip to install it and python3 -m maturin to run it.</description></item><item><title>jakeroggenbuck</title><link>https://jr0.org/projects/jakeroggenbuck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jakeroggenbuck/</guid><description>See on GitHub
Jake Roggenbuck Hello! My name is Jake Roggenbuck and I&amp;rsquo;m a student learning Computer Science.
Currently working on a local ordering system called Local List finditlocal.org - about page I am also working on a few projects in Go right now BestNextStep &amp;amp; study-cli View my monthly Dev Log If you want to collaborate on a project, feel free to send me an email: me@jr0.org Website: jr0.org LinkedIn: Jake Roggenbuck GPG Key: 309BBC</description></item><item><title>JakeRoggenbuck.github.io</title><link>https://jr0.org/projects/jakeroggenbuck.github.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jakeroggenbuck.github.io/</guid><description>See on GitHub
jr0.org Currently, Hugo to make this static website.
New Recently (March 2022), I added a page for my new Dev Log, jr0.org/devlogs.
History This website has been up since May 26, 2019 in some form or another.
Current Prior Prior First</description></item><item><title>jakesutils</title><link>https://jr0.org/projects/jakesutils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jakesutils/</guid><description>See on GitHub
jakesutils A collection of utils that I use all the time in my projects</description></item><item><title>jam0001</title><link>https://jr0.org/projects/jam0001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jam0001/</guid><description>See on GitHub
Jam #1 Welcome to the first langjam! We&amp;rsquo;re excited to get started.
Theme The theme of the jam is &amp;ldquo;first-class comments&amp;rdquo;.
Getting started To participate:
fork this repo make a copy of the TEMPLATE directory rename the copy to your team name (for example, if your team is &amp;ldquo;foobazers&amp;rdquo; rename TEMPLATE to foobazers) update the TEAM file in the directory with the name of your team members. Team members should be listed by their GitHub username.</description></item><item><title>JARBS</title><link>https://jr0.org/projects/jarbs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jarbs/</guid><description>See on GitHub
Jake&amp;rsquo;s Auto Rice Bash Script Configs for bspwm
sxhkd
polybar
dunst
nvim
vim
rofi
termite
alacritty
bash aliases
wallpapers
and more</description></item><item><title>JavaPong</title><link>https://jr0.org/projects/javapong/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/javapong/</guid><description>See on GitHub
404: Not Found</description></item><item><title>JEC-go</title><link>https://jr0.org/projects/jec-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jec-go/</guid><description>See on GitHub
JEC-go Jabacat&amp;rsquo;s Easy Config
JEC-py | JEC-rs | JEC-go | JEC-c++ | JEC-kt | JEC-c | JEC-zig | JEC-ts
API ConfigFile - Exists - Remove - Create - FromHome ConfigDir - Exists - Remove - Create - FromHome Usage conf := ConfigFile{&amp;#34;./test.conf&amp;#34;} if !conf.Exists() { conf.Create() } dir := ConfigDir{&amp;#34;./config/&amp;#34;} if !dir.Exists() { dir.Create() } conf.Remove() dir.Remove() conf = ConfigFile{&amp;#34;&amp;#34;}.FromHome(&amp;#34;./test.conf&amp;#34;) strings.Contains(conf.path, &amp;#34;home&amp;#34;) // true at /home/user/test.conf</description></item><item><title>JEC-py</title><link>https://jr0.org/projects/jec-py/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jec-py/</guid><description>See on GitHub
JEC-py Jabacat&amp;rsquo;s Easy Config
JEC-py | JEC-rs | JEC-go | JEC-c | JEC-c++ | JEC-zig | JEC-ts
API ConfigFile - from_home - exists - remove - create ConfigDir - from_home - exists - remove - create Usage conf_1 = ConfigFile(&amp;#34;./config.yml&amp;#34;) conf_2 = ConfigFile.from_home(&amp;#34;./config.yml&amp;#34;) dir_1 = ConfigDir(&amp;#34;./config/&amp;#34;) dir_2 = ConfigDir.from_home(&amp;#34;./config/&amp;#34;) if not dir_1.exists(): dir_1.create() dir_1.remove()</description></item><item><title>JEC-rs</title><link>https://jr0.org/projects/jec-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/jec-rs/</guid><description>See on GitHub
JEC-rs Jabacat&amp;rsquo;s Easy Config
JEC-py | JEC-rs | JEC-go | JEC-c | JEC-c++ | JEC-zig | JEC-ts
API ConfigFile - exists - remove - create - from_home ConfigDir - exists - remove - create - from_home Usage let conf = ConfigFile { path: &amp;#34;./test.yml&amp;#34;.to_string(), }; if !conf.exists() { conf.create(); } conf.remove(); let conf = ConfigDir { path: &amp;#34;./config/&amp;#34;.to_string(), }; if !conf.exists() { conf.create(); } conf.remove(); let conf = ConfigFile::from_home(&amp;#34;.</description></item><item><title>Journal.vim</title><link>https://jr0.org/projects/journal.vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/journal.vim/</guid><description>See on GitHub
Journal.vim What it does This plugin lets you organize your daily journal. It lets you open a day specific journal and manages the files all behind the scenes.
Setup and Config let g:journals_directory = &amp;#34;/path/to/journals_directory&amp;#34; Commands Command Description :Journal Open the journal for today Future features A search by date or relative date (ex. &amp;ldquo;last friday&amp;rdquo;) Keyword search (ex. &amp;ldquo;Exam&amp;rdquo;, &amp;ldquo;Weekend&amp;rdquo;)</description></item><item><title>js-snake</title><link>https://jr0.org/projects/js-snake/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/js-snake/</guid><description>See on GitHub
js-snake Snake game written in p5 JS Requires a local node server. install http-server by running &amp;ldquo;npm install http-server&amp;rdquo;, then while in the js-snake folder run &amp;ldquo;http-server&amp;rdquo;, finally connect to &amp;ldquo;http://localhost:8080/&amp;rdquo; and open js-snake.html.</description></item><item><title>July 2022</title><link>https://jr0.org/devlogs/july-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/july-2022/</guid><description>This month, I made 231 commits in 30 different repositories. One of my favorite projects was BestNextStep which was a project that I thought of many years ago but was not able to fully develop until the last few years. I have also been working on a math paper with the current (tentative to change) title of Observations of Every Third Digit of the Thue-Morse Sequence. This month I created 11 repositories, two are cli applications in Go.</description></item><item><title>June 2022 - Go, C, and Rust!</title><link>https://jr0.org/devlogs/june-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/june-2022/</guid><description>This month I have committed to keeping up three system languages (Go, Rust, C) to learn more about backend tools and system programs. I also keep up my skills with Python because it is a great language to know. I made a library called Sense and wrote it in Go, Rust, C, and Python. I also wrote a preprocesor for Go in Go called Macaroon. I also wrote a study tool called study-cli in Go as well.</description></item><item><title>kotlin-todo-app</title><link>https://jr0.org/projects/kotlin-todo-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/kotlin-todo-app/</guid><description>See on GitHub
kotlin-todo-app First view Second view</description></item><item><title>Lan-Website</title><link>https://jr0.org/projects/lan-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/lan-website/</guid><description>See on GitHub
Lan-Website A simple website for my local network to share files</description></item><item><title>lark</title><link>https://jr0.org/projects/lark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/lark/</guid><description>See on GitHub
Lark - a parsing toolkit for Python Lark is a parsing toolkit for Python, built with a focus on ergonomics, performance and modularity.
Lark can parse all context-free languages. To put it simply, it means that it is capable of parsing almost any programming language out there, and to some degree most natural languages too.
Who is it for?
Beginners: Lark is very friendly for experimentation. It can parse any grammar you throw at it, no matter how complicated or ambiguous, and do so efficiently.</description></item><item><title>learn-planck</title><link>https://jr0.org/projects/learn-planck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/learn-planck/</guid><description>See on GitHub
404: Not Found</description></item><item><title>learning_sql</title><link>https://jr0.org/projects/learning_sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/learning_sql/</guid><description>See on GitHub
learning_sql Connecting connection = sqlite3.connect(&amp;#34;myTable.db&amp;#34;) Creating a table sql_command = &amp;#34;&amp;#34;&amp;#34; CREATE TABLE employee ( staff_number INTEGER PRIMARY KEY, fname VARCHAR(20), lname VARCHAR(30), gender CHAR(1), joining DATE);&amp;#34;&amp;#34;&amp;#34; Writing the empty table to the db crsr = connection.cursor() crsr.execute(sql_command) connection.commit() Writing values to db Getting data First = input(&amp;#34;First: &amp;#34;) Last = input(&amp;#34;Last: &amp;#34;) Gender = input(&amp;#34;Gender: &amp;#34;) Joining = input(&amp;#34;Joining: &amp;#34;) Adding data to the correct syntax sql_command = &amp;#34;INSERT INTO employee&amp;#34; sql_fields = &amp;#34;(staff_number, fname, lname, gender, joining)&amp;#34; sql_data = f&amp;#34;VALUES (NULL, &amp;#39;{First}&amp;#39;, &amp;#39;{Last}&amp;#39;, &amp;#39;{Gender}&amp;#39;, &amp;#39;{Joining}&amp;#39;);&amp;#34; Excecuting the command cursor.</description></item><item><title>learningMachineLearning</title><link>https://jr0.org/projects/learningmachinelearning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/learningmachinelearning/</guid><description>See on GitHub
learningMachineLearning</description></item><item><title>learningx86_assembly</title><link>https://jr0.org/projects/learningx86_assembly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/learningx86_assembly/</guid><description>See on GitHub
404: Not Found</description></item><item><title>least-squares-regression</title><link>https://jr0.org/projects/least-squares-regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/least-squares-regression/</guid><description>See on GitHub
least-squares-regression View least-squares.ipynb</description></item><item><title>lesson-tester</title><link>https://jr0.org/projects/lesson-tester/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/lesson-tester/</guid><description>See on GitHub
lesson-tester Test python code in the browser. Wrap code with specific lesson tests for code completeness grading.</description></item><item><title>lightBot</title><link>https://jr0.org/projects/lightbot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/lightbot/</guid><description>See on GitHub
lightBot A Discord bot with control of GPIO pins. These pins were connected to a few relays that controlled lights in my room.</description></item><item><title>LimeOS</title><link>https://jr0.org/projects/limeos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/limeos/</guid><description>See on GitHub
LimeOS Backgrounds images for LimeOS</description></item><item><title>link</title><link>https://jr0.org/projects/link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/link/</guid><description>See on GitHub
link Description A public mirror of the private development link repository, without the .env and Rocket.toml hosted on heroku
Setup .env needs the following
DATABASE_URL=url or uri to database AUTH_KEY=an auth key Rocket.toml
# Database [global.databases.redirect-api] url = &amp;#34;postgres://&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;@localhost/redirect-api&amp;#34;</description></item><item><title>link-cli</title><link>https://jr0.org/projects/link-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/link-cli/</guid><description>See on GitHub
link-cli Utility to manage link.jr0.org</description></item><item><title>Local List</title><link>https://jr0.org/p/local-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/local-list/</guid><description>Local List is a Web App that allows users to search and discover local products and services in their area. This project was made as a part of a school project but has since expanded and partnered with real businesses.
Visit the page! TheLocalList.org
The tides have turned and the majority of sales happen on Amazon, seemingly irreversibly drowning local business. Our mission is to tip the scale back in favor of local business before it is too late.</description></item><item><title>mac-shifter</title><link>https://jr0.org/projects/mac-shifter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mac-shifter/</guid><description>See on GitHub
mac-shifter</description></item><item><title>macaroon</title><link>https://jr0.org/projects/macaroon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/macaroon/</guid><description>See on GitHub
Macaroon - Go Macros &amp;amp; Preprocessor Add C style macros to code in Go. Not to be confused with go-macaroon/macaroon about &amp;ldquo;Cookies with Contextual Caveats for Decentralized Authorization in the Cloud&amp;rdquo;.
Quick Start Use the set keyword to define the value of a simple macro.
Before package main #set NAME &amp;#34;jake&amp;#34; func main() { fmt.Println(NAME) } After package main func main() { fmt.Println(&amp;#34;jake&amp;#34;) } Running macaroon main.gomac &amp;amp;&amp;amp; go build</description></item><item><title>magic-identify</title><link>https://jr0.org/projects/magic-identify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/magic-identify/</guid><description>See on GitHub
About magic-identify implements a wrapper around both the python-magic module and the identify module to try and always return results, even if one fails. Finally, failing that it will try to guess some minimal shell script environments too (specifically looking at common keywords in malware droppers/downloaders that do not always have leading identification lines).
It returns two strings, one which may be a higher level text description and a second which should always be a mime-type identifier.</description></item><item><title>mahou</title><link>https://jr0.org/projects/mahou/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mahou/</guid><description>See on GitHub
mahou Mahou is my AP Computer Science create task for the 2020-21 year. Mahou is a source-to-source compiler, from a custom language to python.
Mahou uses a lexer to find all of the tokens in the original source, then uses a parser to convert the source code into python.
First language set a = 0; a += 1; print a; Tokens parsed Type Part Line ---------------------------- Set set 1:1 Identifier a 1:5 Assign = 1:7 Numeric 0 1:9 Semi ; 1:10 Identifier a 2:12 Plus + 2:14 Assign = 2:15 Numeric 1 2:17 Semi ; 2:18 Print print 3:20 Identifier a 3:26 Semi ; 3:27 Outputted python a = 0 a+=1 print(a)</description></item><item><title>March 2022 - Starting Local List</title><link>https://jr0.org/devlogs/march-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/march-2022/</guid><description>This month, I registered the domains finditlocal.org and finditlocal.us for a company called Local List I started in connection with my Econ class. I created a frontend using React and a backend using Django. Currently, both are hosted and communicating to display local products at those domains. I am really excited for this project and I even printed business cards and stickers for the project to share with classmates. I feel like this project is the latest culmination of my skills in frontend, backend, and system architecture.</description></item><item><title>markov-chain</title><link>https://jr0.org/projects/markov-chain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/markov-chain/</guid><description>See on GitHub
Markov chain this is a simple markov chain implementation inspired by a project @nathansolomon1678 made
Generate chain The text used to make the chain should be in ./all_stuff.txt, or change the string in markov.py from markov import MakeMarkov mark = MakeMarkov() # Only needed on first run mark.setup_db() # Pull all the words from the text file mark.read_file() # Make the sql database of unique words, only needed on first run mark.</description></item><item><title>math</title><link>https://jr0.org/projects/math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/math/</guid><description>See on GitHub
math A collection of math notebooks that wrote and I used during my senior year of high school to study for tests and remember concepts.
Example Here is an example Power Rule.ipynb</description></item><item><title>May 2022 - Da Vinci Game Jam &amp; More Auto Clock Speed</title><link>https://jr0.org/devlogs/may-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/may-2022/</guid><description>This month I had my finals and AP tests, all of which where a lot of work, but I still worked on some project and organized the first annual Da Vinci Game Jam for my school. Links to the resources for the workshops can be found here. The game jam was an overall success and we had many great game entries. This month I also worked on auto clock speed some more, adding a universal interface to all of the commands and other issues.</description></item><item><title>mechanize</title><link>https://jr0.org/projects/mechanize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mechanize/</guid><description>See on GitHub
404: Not Found</description></item><item><title>MeditativeSquares</title><link>https://jr0.org/projects/meditativesquares/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/meditativesquares/</guid><description>See on GitHub
404: Not Found</description></item><item><title>minecraft_texture_packs</title><link>https://jr0.org/projects/minecraft_texture_packs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/minecraft_texture_packs/</guid><description>See on GitHub
minecraft_texture_packs</description></item><item><title>ModPackMaker</title><link>https://jr0.org/projects/modpackmaker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/modpackmaker/</guid><description>See on GitHub
ModPackMaker Use run python3 main.py
mod = Mods() mod.run_command(mod.command) Folder Add minecraft mods to mods/ folder</description></item><item><title>mongo_passkeep</title><link>https://jr0.org/projects/mongo_passkeep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongo_passkeep/</guid><description>See on GitHub
mongo_passkeep A command line utility for storing passwords
Cli Write write
View view
Delete delete
Edit edit &amp;lt;id&amp;gt;
Read read &amp;lt;id&amp;gt;</description></item><item><title>mongo-notes</title><link>https://jr0.org/projects/mongo-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongo-notes/</guid><description>See on GitHub
mongo-notes</description></item><item><title>mongoc</title><link>https://jr0.org/projects/mongoc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongoc/</guid><description>See on GitHub
mongoc A fast way to view databases, collections and documents from mongodb in the command line
Usage mongoc
Install pip install mongoc</description></item><item><title>mongoc-rs</title><link>https://jr0.org/projects/mongoc-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongoc-rs/</guid><description>See on GitHub
mongoc-rs Quickly view your mongodb databases, their collections, and their documents from the command line
Installing git clone https://github.com/JakeRoggenbuck/mongoc-rs cargo install --path mongoc-rs</description></item><item><title>mongodb_schema_check</title><link>https://jr0.org/projects/mongodb_schema_check/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongodb_schema_check/</guid><description>See on GitHub
mongodb_schema_check from pymongo import MongoClient from typeschemalib import typeschemalib class Database: def __init__(self, location: str = &amp;#34;localhost&amp;#34;, port: int = 27017): &amp;#34;&amp;#34;&amp;#34;Set defaults and connect&amp;#34;&amp;#34;&amp;#34; self.location = location self.port = port self.connect() def connect(self): &amp;#34;&amp;#34;&amp;#34;Create client, database and collections&amp;#34;&amp;#34;&amp;#34; self.client = MongoClient(self.location, self.port) self.db = self.client.my_database self.profiles = self.db.profiles self.messages = self.db.messages def write_profile(self, document): &amp;#34;&amp;#34;&amp;#34;Check schema of document using schema file&amp;#34;&amp;#34;&amp;#34; schema = &amp;#34;schema/profile.stml&amp;#34; valid = typeschemalib.</description></item><item><title>mongodb-login</title><link>https://jr0.org/projects/mongodb-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongodb-login/</guid><description>See on GitHub
mongodb-login</description></item><item><title>mongofastlogger</title><link>https://jr0.org/projects/mongofastlogger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongofastlogger/</guid><description>See on GitHub
Logger A simple and fask logging library that uses the power of mongodb to save and query logs (with built in cli)
Cli # search search &amp;lt;tag&amp;gt; &amp;lt;logger_name&amp;gt; mongofastlogger search Info # clear clear &amp;lt;logger_name&amp;gt; mongofastlogger clear # log log &amp;lt;tag&amp;gt; &amp;lt;message&amp;gt; &amp;lt;logger_name&amp;gt; mongofastlogger log Info &amp;#34;This is a log message&amp;#34; # view view &amp;lt;logger_name&amp;gt; mongofastlogger view # export export &amp;lt;filename&amp;gt; &amp;lt;logger_name&amp;gt; mongofastlogger export filename.log # last last &amp;lt;metric&amp;gt; &amp;lt;amount&amp;gt; &amp;lt;logger_name&amp;gt; mongofastlogger last hours 3 # help find commands python3 mongofastlogger help with specific commands mongofastlogger command --help # other info &amp;lt;logger_name&amp;gt; is optional and is &amp;#39;logs&amp;#39; by default Library from mongofastlogger import LogViewer, Logger # Make logger logger = Logger() # Log message with tag of &amp;#34;Something&amp;#34; logger.</description></item><item><title>MongoShortener</title><link>https://jr0.org/projects/mongoshortener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/mongoshortener/</guid><description>See on GitHub
MongoShortener</description></item><item><title>my-readme-image</title><link>https://jr0.org/projects/my-readme-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/my-readme-image/</guid><description>See on GitHub
my-readme-image</description></item><item><title>n-rus-bot</title><link>https://jr0.org/projects/n-rus-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/n-rus-bot/</guid><description>See on GitHub
n-rus-bot Discord bot for the e:b:ic server</description></item><item><title>nasa-spaceapps-2020</title><link>https://jr0.org/projects/nasa-spaceapps-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/nasa-spaceapps-2020/</guid><description>See on GitHub
HEASARC and NEOSSat Data Viewer nasa-spaceapps-2020
By George Berdovskiy and Shuzheng (Tom) Zhang
Set up instructions:
Install pip, see how to do it at https://pip.pypa.io/en/stable/installing/ Install flask using pip install flask Install packages using pip, you can see the full list in requirements.txt You can install them manually, or navigate to this directory in terminal/command prompt and type in: pip install -r requirements.txt Navigate to directory nasa-spaceapps-2020/app_directory in terminal/command prompt Run the webapp using python viewer.</description></item><item><title>nasa-spaceapps-2021</title><link>https://jr0.org/projects/nasa-spaceapps-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/nasa-spaceapps-2021/</guid><description>See on GitHub
nasa-spaceapps-2021 Project for NASA Spaceapps 2021</description></item><item><title>ned-bot</title><link>https://jr0.org/projects/ned-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ned-bot/</guid><description>See on GitHub
ned-bot A discord bot that reacts with üá© when any users react with üá≥ and üá™. It likes spelling its name. Requirements
Requires discord.py https://pypi.org/project/discord.py/ Installation
install discord.py through pip via &amp;ldquo;pip install discord.py&amp;rdquo; To start the bot run &amp;ldquo;python3 ned-bot.py&amp;rdquo;</description></item><item><title>new-website</title><link>https://jr0.org/projects/new-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/new-website/</guid><description>See on GitHub
new-website</description></item><item><title>nitrogen-css</title><link>https://jr0.org/projects/nitrogen-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/nitrogen-css/</guid><description>See on GitHub
nitrogen-css A very epic CSS front end framework that is slightly not bad.</description></item><item><title>November 2022</title><link>https://jr0.org/devlogs/november-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/november-2022/</guid><description>This month, I did 191 commits in 37 repos. I also opened 31 pull requests.
Research I started a new paper that will be added to research when it&amp;rsquo;s done.
Tap I worked on my program called Tap. This tool helps you quickly tap basic files into existence. Similar to snippets, tap generates full boiler plate files like simple make files, python with argparse setup, etc.
Flamegraph I started using flamegraph for auto-clock-speed</description></item><item><title>novus-chart</title><link>https://jr0.org/projects/novus-chart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/novus-chart/</guid><description>See on GitHub
novus-chart A modern looking, accessible medical chart application based on a MERN stack.</description></item><item><title>nxyso_api</title><link>https://jr0.org/projects/nxyso_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/nxyso_api/</guid><description>See on GitHub
nxyso_api A definition and search API for a language called Nysjomon made using FastApi
Requirements: fastapi uvicorn Running: uvicorn main:app --reload</description></item><item><title>nxyso_definition_bot</title><link>https://jr0.org/projects/nxyso_definition_bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/nxyso_definition_bot/</guid><description>See on GitHub
nxyso_definition_bot</description></item><item><title>Observations on Every Third Digit of the Thue-Morse Sequence</title><link>https://jr0.org/research/t3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/research/t3/</guid><description>Abstract We investigate some interesting properties of the sequence made up of every third term of the Thue-Morse sequence, and consider other similar sequences.
PDF on Github Source</description></item><item><title>ocean-game-js</title><link>https://jr0.org/projects/ocean-game-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ocean-game-js/</guid><description>See on GitHub
ocean-game-js</description></item><item><title>ocean-game-py</title><link>https://jr0.org/projects/ocean-game-py/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ocean-game-py/</guid><description>See on GitHub
ocean-game-py Simple ocean game demo for DV Game Jam
Slides View the slides pygame_slides.pdf
Image</description></item><item><title>October 2022</title><link>https://jr0.org/devlogs/october-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/october-2022/</guid><description>Update In October I did 146 commits and created 9 repositories. I have been using C a lot this months because my class I am currently taking is in C. This has inspired me to write a lot of my new side projects in C. At least the ones where C makes sense as a language.
This month, I made an October themed fetch program. JakeRoggenbuck/spookyfetch
Auto Clock Speed 0.1.10 In this release, we closed and completed 76 issues.</description></item><item><title>On Logs Research</title><link>https://jr0.org/research/on-logs-research/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/research/on-logs-research/</guid><description>On Logs Research Exploration on the decimal places of logs from December 2021. Jupyter Notebook</description></item><item><title>on-logs-research</title><link>https://jr0.org/projects/on-logs-research/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/on-logs-research/</guid><description>See on GitHub
on-logs-research Exploration on the decimal places of logs from December 2021 - Present</description></item><item><title>one-time-pad-generator-asm</title><link>https://jr0.org/projects/one-time-pad-generator-asm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/one-time-pad-generator-asm/</guid><description>See on GitHub
one-time-pad-generator-asm</description></item><item><title>onefetch</title><link>https://jr0.org/projects/onefetch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/onefetch/</guid><description>See on GitHub
Onefetch is a command-line Git information tool written in Rust that displays project information and code statistics for a local Git repository directly on your terminal. The tool is completely offline - no network access is required.
By default, the repo&amp;rsquo;s information is displayed alongside the dominant language&amp;rsquo;s logo, but you can further configure onefetch to instead use an image - on supported terminals -, a text input or nothing at all.</description></item><item><title>openpilot</title><link>https://jr0.org/projects/openpilot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/openpilot/</guid><description>See on GitHub
Table of Contents What is openpilot? Integration with Stock Features Supported Hardware Supported Cars Community Maintained Cars and Features Installation Instructions Limitations of openpilot ALC and LDW Limitations of openpilot ACC and FCW Limitations of openpilot DM User Data and comma Account Safety and Testing Testing on PC Community and Contributing Directory Structure Licensing What is openpilot? openpilot is an open source driver assistance system. Currently, openpilot performs the functions of Adaptive Cruise Control (ACC), Automated Lane Centering (ALC), Forward Collision Warning (FCW) and Lane Departure Warning (LDW) for a growing variety of supported car makes, models and model years.</description></item><item><title>Paper</title><link>https://jr0.org/projects/paper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/paper/</guid><description>See on GitHub
Paper print &amp;#34;Hello World!!&amp;#34; string .name = input &amp;#34;What&amp;#39;s your name? &amp;#34; int .age = input &amp;#34;What&amp;#39;s you age? &amp;#34; float .a_float = input &amp;#34;Pick a number greater than 1 and less than 2: &amp;#34; bool .ask_again = True string .name = input &amp;#34;What&amp;#39;s your name? &amp;#34; int .age = input &amp;#34;What&amp;#39;s you age? &amp;#34; stop</description></item><item><title>pascals-triangle</title><link>https://jr0.org/projects/pascals-triangle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pascals-triangle/</guid><description>See on GitHub
pascals-triangle Exploration of pascals triangle</description></item><item><title>pathfinder</title><link>https://jr0.org/projects/pathfinder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pathfinder/</guid><description>See on GitHub
Pathfinder A simple utility to view, edit, and search your $PATH
Usage Shorthand Flag Description h --help Display this page and exit v --version Display the version and exit l --list List all locations in $PATH (same as find with no keyword) f --find Find locations in $PATH including search keyword a --add Add location to the $PATH, and open a new bash prompt p --purge Unsets everything in $PATH, it will be empty n --number List locations in $PATH with numbers on side Install git clone https://github.</description></item><item><title>pgzero</title><link>https://jr0.org/projects/pgzero/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pgzero/</guid><description>See on GitHub
404: Not Found</description></item><item><title>pinter</title><link>https://jr0.org/projects/pinter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pinter/</guid><description>See on GitHub
Pinter This repository houses the codebase for pinter (Planck interpreter), an interpreter for Planck bytecodes.
Requirements GNU make clang Build make
Run ./bin/pinter [file] to execute a file ./bin/pinter --help for help</description></item><item><title>planck.vim</title><link>https://jr0.org/projects/planck.vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/planck.vim/</guid><description>See on GitHub
planck.vim A syntax highlighting for planck lang files
Install Plug jakeroggenbuck/planck.vim</description></item><item><title>player_data_finder</title><link>https://jr0.org/projects/player_data_finder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/player_data_finder/</guid><description>See on GitHub
player_data_finder Install pip3 install -r requirements.txt
Setup Make a file called config.py Add this class and your ftp credentials
class Config: host = &amp;#34;ftp.example.com&amp;#34; username = &amp;#34;user&amp;#34; password = &amp;#34;password&amp;#34; port = 254 Running python3 main.py</description></item><item><title>pll</title><link>https://jr0.org/projects/pll/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pll/</guid><description>See on GitHub
PLL (Planck Lang Library) Plank Lang Standard Library
io.plk list.plk math.plk struct.plk</description></item><item><title>plrs</title><link>https://jr0.org/projects/plrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/plrs/</guid><description>See on GitHub
plrs The multi-tool of lexical analysis and tokenization.
Install pip install plrs Build maturin build Examples zipfs-law API Global variables EOF_TOKEN Classes Tokens Settings Token - part - token - set_part - set_token - __str__ - __repr__ Lexer - new - char_forward - skip_over_char_set - next Functions is_char_symbol is_char_operator is_char_whitespace is_char_numeric is_single_quote is_double_quote ends_token is_part_numeric tokenize</description></item><item><title>pogscript</title><link>https://jr0.org/projects/pogscript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pogscript/</guid><description>See on GitHub
Pogscript Pogscript, Overtly, Great, Script For syntax add @@PogScript to the top of the file
For each command use &amp;gt; in front
Commands v for value &amp;gt;v(2 This sets the value to 2 and writes it in memory to the first open location i.e. 0
o for output &amp;gt;o(0 This outputs memory location 0
i for input &amp;gt;i(Prompt: This outputs memory location 0
Operators a for add; s for subtract m for multiply d for divide p for push For each operator the formate is consistent &amp;gt;a{0{1 This adds memory location 0 and 1 &amp;gt;m{0{1 This multiplies memory locations 0 and 1</description></item><item><title>Polybot</title><link>https://jr0.org/projects/polybot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/polybot/</guid><description>See on GitHub
404: Not Found</description></item><item><title>Polybot-2</title><link>https://jr0.org/projects/polybot-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/polybot-2/</guid><description>See on GitHub
Polybot-2</description></item><item><title>ponyc</title><link>https://jr0.org/projects/ponyc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ponyc/</guid><description>See on GitHub
Pony Pony is an open-source, object-oriented, actor-model, capabilities-secure, high-performance programming language.
Status Pony is still pre-1.0 and as such, semi-regularly introduces breaking changes. These changes are usually fairly easy to adapt to. Applications written in Pony are currently used in production environments.
Supported platforms Operating Systems FreeBSD Linux macOS Windows 10 CPUs Full support for 64-bit platforms x86 and ARM CPUs only Partial support for 32-bit platforms The arm and armhf architectures are tested via CI (Continuous Integration testing) More Information Installation Building from source Docker images Editor support Resources Learn more about Pony Start learning Pony Getting help Try Pony online Frequently Asked Questions Community Contributing We welcome contributions to Pony.</description></item><item><title>port-checker</title><link>https://jr0.org/projects/port-checker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/port-checker/</guid><description>See on GitHub
Port Checker Check for open tcp and tcp6 ports and their process info for server debugging</description></item><item><title>position_reader</title><link>https://jr0.org/projects/position_reader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/position_reader/</guid><description>See on GitHub
position_reader Running python3 main.py nbtdatafile.dat python3 -m venv .venv source .venv/bin/activate pip install nbtlib</description></item><item><title>programming-languages</title><link>https://jr0.org/projects/programming-languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/programming-languages/</guid><description>See on GitHub
programming-languages This is list of programming languages I have made for learning. In each project there were many key takeaways that can be learned from. I will continue to add information and lessons learned from each project. I will also add a description of each project and what it accomplished.
jai [source] &amp;lt;- Latest Jai is a programming language
https://github.com/JakeRoggenbuck/jai plrs [source] (Lexer library) The multi-tool of lexical analysis and tokenization.</description></item><item><title>Project Invent</title><link>https://jr0.org/p/project-invent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/project-invent/</guid><description>Here is a list of portfolio projects for my Project Invent Class. Project Invent is the end of the CTE Pathway and these projects show my wide variety of skills and interests. These are all recent projects that needed many hours of work each.
Auto Clock Speed A utility to check stats about your CPU, and auto regulate clock speeds to help with either performance or battery life. This is a project that I put a lot of time into, more than any other project outside of school, and has three active developers.</description></item><item><title>project-announcements</title><link>https://jr0.org/projects/project-announcements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/project-announcements/</guid><description>See on GitHub
project-announcements Usage from test.py
from main import Repo if __name__ == &amp;#34;__main__&amp;#34;: repo = Repo(&amp;#34;jakeroggenbuck&amp;#34;, &amp;#34;stow-squid&amp;#34;) announcements = repo.get_announcements() for announcement in announcements: print(announcement)</description></item><item><title>project-invent-rube-goldberg-machine</title><link>https://jr0.org/projects/project-invent-rube-goldberg-machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/project-invent-rube-goldberg-machine/</guid><description>See on GitHub
Project Invent: Rube Goldberg Machine</description></item><item><title>public-pgp-keys</title><link>https://jr0.org/projects/public-pgp-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/public-pgp-keys/</guid><description>See on GitHub
public-pgp-keys</description></item><item><title>pwm-dc-motor</title><link>https://jr0.org/projects/pwm-dc-motor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pwm-dc-motor/</guid><description>See on GitHub
pwm-dc-motor</description></item><item><title>pwntools</title><link>https://jr0.org/projects/pwntools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pwntools/</guid><description>See on GitHub
pwntools - CTF toolkit Pwntools is a CTF framework and exploit development library. Written in Python, it is designed for rapid prototyping and development, and intended to make exploit writing as simple as possible.
from pwn import * context(arch = &amp;#39;i386&amp;#39;, os = &amp;#39;linux&amp;#39;) r = remote(&amp;#39;exploitme.example.com&amp;#39;, 31337) # EXPLOIT CODE GOES HERE r.send(asm(shellcraft.sh())) r.interactive() Try It Now! You can now do a live demo of Pwntools, right in your browser.</description></item><item><title>pylexlite</title><link>https://jr0.org/projects/pylexlite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pylexlite/</guid><description>See on GitHub
pylex_lite The test for plrs</description></item><item><title>pyswitch</title><link>https://jr0.org/projects/pyswitch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pyswitch/</guid><description>See on GitHub
PySwitch pyswitch</description></item><item><title>pytest_assignments</title><link>https://jr0.org/projects/pytest_assignments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/pytest_assignments/</guid><description>See on GitHub
pytest_assignments</description></item><item><title>Python-Guides</title><link>https://jr0.org/projects/python-guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/python-guides/</guid><description>See on GitHub
404: Not Found</description></item><item><title>qme</title><link>https://jr0.org/projects/qme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/qme/</guid><description>See on GitHub
This is the repository for the QME source code and assets.
QME Keybinds w, a, s, and d for movement i zooms the camera in o zooms the camera out Requirements The project is built using the latest version of open Java Development Pack java-latest-openjdk-devel
The current version the program supports Java version 15
Maximum backwards compatibility with JDK version 11
Note: If you are using MacOS and do not have a working Maven installation, please run the script .</description></item><item><title>qme-launcher</title><link>https://jr0.org/projects/qme-launcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/qme-launcher/</guid><description>See on GitHub
Installing QME 1. Get Java 15 Windows If you are on windows, get the MSI version Java 15.0.2 MSI
Mac OS Mac OS will use the zip version Java 15.0.2 ZIP
2. Get the latest launcher 2.1 Navigate to latest and click the qme-launcher-0.1.1.jar under assets 2.2 Run the launcher jar with Java (By clicking it) and you will see the QME launcher open 2.3 In the launcher, click Launch Game, it will have a popup that says Version not installed, would you like to install?</description></item><item><title>qme-releases</title><link>https://jr0.org/projects/qme-releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/qme-releases/</guid><description>See on GitHub
QME Releases How to install QME unsing the QME Installer (Recommended) Download the QME launcher from the releases section in this github repository and run the executable file. If you are having issues follow the instructions below.
If you are not using the latest version of Java runtime (15) then QME Installer will not work. Please install it here, or use the JRE 11-14 compatible release without the launcher.</description></item><item><title>qme5-server</title><link>https://jr0.org/projects/qme5-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/qme5-server/</guid><description>See on GitHub
QME5 File Server A dynamic website to host jar files for the game qme5
Run python3 app.py</description></item><item><title>rclc</title><link>https://jr0.org/projects/rclc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rclc/</guid><description>See on GitHub
Rust Command Line Chat (RCLC) Structure Install The ~/.rclc/ dir needs to be created. So do the two FIFOs. Do this by running the following.
./scripts/install.sh Uninstall ./scripts/uninstall.sh</description></item><item><title>Reddit_Downloader</title><link>https://jr0.org/projects/reddit_downloader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/reddit_downloader/</guid><description>See on GitHub
Reddit_Downloader Get page Because Reddit requires authentication, it&amp;rsquo;s easier to go to the website and get the page source to parse the image urls
Config element = &amp;#34;classname or elecment id&amp;#34; filename = &amp;#34;example.txt&amp;#34; directory = &amp;#34;example&amp;#34; Running # Get filename and directory from config FILENAME = config.filename DIRECTORY = config.directory # Make GetUrls object and give it filename geturls = GetUrls(FILENAME) # Parse and Extract urls geturls.</description></item><item><title>Reduc</title><link>https://jr0.org/projects/reduc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/reduc/</guid><description>See on GitHub
Reduc A lightweight general purpose window manager written in rust</description></item><item><title>reminder-bot</title><link>https://jr0.org/projects/reminder-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/reminder-bot/</guid><description>See on GitHub
reminder-bot A Discord Bot designed to remind users of custom events</description></item><item><title>Research</title><link>https://jr0.org/p/research/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/research/</guid><description>On Logs Research Exploration on the decimal places of logs from December 2021. Jupyter Notebook
Pascals Triangle Exploration of pascals triangle from January 2022. Jupyter Notebook</description></item><item><title>Research</title><link>https://jr0.org/research/pascals-triangle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/research/pascals-triangle/</guid><description>Pascals Triangle Exploration of pascals triangle from January 2022. Jupyter Notebook</description></item><item><title>rest-api-in-every-lang</title><link>https://jr0.org/projects/rest-api-in-every-lang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rest-api-in-every-lang/</guid><description>See on GitHub
REST APIs in every language Please add more langs and frameworks!
Python Fast API Flask Django Rust Rocket Javascript Express Go net/http gin Ruby Sinatra C Add frameworks C++ Add frameworks Java Add frameworks</description></item><item><title>rock</title><link>https://jr0.org/projects/rock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rock/</guid><description>See on GitHub
Rock A simple command line utility for manipulating standard in and out, similar to awk
Install git clone https://github.com/JakeRoggenbuck/rock cargo install --path rock Usage short long description example -r --replace replace a certain string with another rock --replace &amp;quot;~&amp;quot; &amp;quot;/home/jake&amp;quot; -s --split split into multiple lines after a character rock --split , Examples echo $PATH | rock -s : | rock -r &amp;#34;/home/jake&amp;#34; &amp;#34;~&amp;#34; echo &amp;#34;~/Downloads,~/Documents,~/Repos/rock&amp;#34; | rock --replace &amp;#34;~&amp;#34; &amp;#34;/home/jake&amp;#34; echo &amp;#34;~/Downloads,~/Documents,~/Repos/rock&amp;#34; | rock --split , | rock --replace &amp;#34;~&amp;#34; &amp;#34;/home/jake&amp;#34; TODO Feature -f --filter will filter out something -b --block will completely block out something -o --only will only show something -p --prepend something to the begining -a --append something the end</description></item><item><title>rocket-pinball</title><link>https://jr0.org/projects/rocket-pinball/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rocket-pinball/</guid><description>See on GitHub
rocket-[not]-pinball A game that started as pinball, but really isn&amp;rsquo;t, more fun
Setup pip3 install -r requirements.txt Running # Start the HTTP server python3 app.py # Start the score REST API uvicorn app:APP --reload --port 8081 Current progress Here are the decisions that have been made about the pinball game. The game won&amp;rsquo;t be the standard pinball game. It will have the mechanic of hitting the ball, but the objective is to have it travel upwards without hitting obstacles.</description></item><item><title>rocky</title><link>https://jr0.org/projects/rocky/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rocky/</guid><description>See on GitHub
About Rocky Linux is a community enterprise Operating System designed to be 100% bug-for-bug compatible with Enterprise Linux, now that CentOS has shifted direction.
Frequently Asked Questions Q: What do you mean, &amp;ldquo;CentOS has shifted direction?&amp;rdquo;
The CentOS project recently announced a shift in strategy for CentOS. Whereas previously CentOS existed as a downstream build of its upstream vendor (it receives patches and updates after the upstream vendor does), it will be shifting to an upstream build (testing patches and updates before inclusion in the upstream vendor).</description></item><item><title>Route-Finding</title><link>https://jr0.org/projects/route-finding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/route-finding/</guid><description>See on GitHub
Route-Finding</description></item><item><title>RushNote</title><link>https://jr0.org/projects/rushnote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rushnote/</guid><description>See on GitHub
RUSHNOTE Take quick notes from command line when in a rush.
Install git clone https://github.com/JakeRoggenbuck/RushNote.git cd RushNote sudo make &amp;amp;&amp;amp; sudo make install For more information man rushnote
Security notes have very open privileges (777) all users can read, write and execute the save file</description></item><item><title>Rust</title><link>https://jr0.org/projects/rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/rust/</guid><description>See on GitHub
The Algorithms - Rust All algorithms implemented in Rust These are for demonstration purposes only.
Sort Algorithms Bubble Bucket Cocktail-Shaker Counting Heap Insertion Gnome Merge Odd-even Pancake Quick Radix Selection Shell Stooge Comb Bucket Timsort Graphs Dijkstra Kruskal&amp;rsquo;s Minimum Spanning Tree Prim&amp;rsquo;s Minimum Spanning Tree Breadth-First Search (BFS) Depth First Search (DFS) Bellman-Ford Prufer Code Math Extended euclidean algorithm Greatest common divisor Miller Rabin primality test Pascal&amp;rsquo;s triangle Square root with Newton&amp;rsquo;s method Fast power algorithm Perfect number Prime number Linear Sieve Pollard&amp;rsquo;s Rho algorithm Fast Fourier Transform Dynamic Programming 0-1 Knapsack Edit Distance Longest common subsequence Longest continuous increasing subsequence Longest increasing subsequence K-Means Clustering Coin Change Rod Cutting Egg Dropping Puzzle Maximum Subarray Is Subsequence Maximal Square Data Structures Queue Heap Linked List Graph Directed Undirected Trie Binary Search Tree B-Tree AVL Tree RB Tree Stack using Linked List Segment Tree Strings Aho-Corasick Algorithm Burrows-Wheeler transform Knuth Morris Pratt Manacher Rabin Carp Reverse Hamming Distance General Convex Hull: Graham Scan N-Queens Problem Graph Coloringp Tower of Hanoi Kmeans Two Sum Search Algorithms Linear Binary Recursive Binary Kth Smallest Exponential Jump Fibonacci Geometry Closest pair of 2D points Ciphers Caesar Morse Code Polybius SHA-2 TEA Transposition Vigen√®re XOR Rot13 Another Rot13 Rot13 All implemented Algos See DIRECTORY.</description></item><item><title>sapphire</title><link>https://jr0.org/projects/sapphire/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sapphire/</guid><description>See on GitHub
A simple git package manager written in ruby
Install run sh impulse.build
Help run sapphire -h</description></item><item><title>SARS-CoV-2_Peplomer_Structure_Analysis</title><link>https://jr0.org/projects/sars-cov-2_peplomer_structure_analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sars-cov-2_peplomer_structure_analysis/</guid><description>See on GitHub
404: Not Found</description></item><item><title>scouting-scripts</title><link>https://jr0.org/projects/scouting-scripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/scouting-scripts/</guid><description>See on GitHub
404: Not Found</description></item><item><title>Scry</title><link>https://jr0.org/projects/scry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/scry/</guid><description>See on GitHub
Scry Scry is a web application that allows users to quickly check open ports, logins, and critical system information about their server from any web browser, anywhere.
Scry consists of both a local server and a client. The server is responsible for gathering data about the system it&amp;rsquo;s monitoring, then making it accessible to the client. The clients job is to present the data from the server, in an easy to use graphical interface in the browser.</description></item><item><title>Seamonsters-2605.github.io</title><link>https://jr0.org/projects/seamonsters-2605.github.io/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/seamonsters-2605.github.io/</guid><description>See on GitHub
Seamonsters-2605.github.io Seamonsters team GitHub Pages site</description></item><item><title>sense-c</title><link>https://jr0.org/projects/sense-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sense-c/</guid><description>See on GitHub
sense-c Sense the directories around you, are they git repositories, what language, etc.
Languages :snake: sense-py || :crab: sense-rs || :hamster: gosense || üá® sense-c
Why? Why so many langs? Because I write projects pretty regularly in all of these languages and want a consistent API and available library support for all of them.
API Git int has_git(char *path); int is_local_git(char *path); git.h
Language enum LANG get_lang(char *path); Example int main() { int lang = get_lang(&amp;#34;.</description></item><item><title>sense-py</title><link>https://jr0.org/projects/sense-py/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sense-py/</guid><description>See on GitHub
sense-py Sense the directories around you, are they git repositories, what language, etc.
Languages :snake: sense-py || :crab: sense-rs || :hamster: gosense || üá® sense-c
Why? Why so many langs? Because I write projects pretty regularly in all of these languages and want a consistent API and available library support for all of them.
API Git has_git(path: str) -&amp;gt; bool is_local_git(path: str) -&amp;gt; bool Language get_lang(path: str) -&amp;gt; Lang Example def main(): language = lang.</description></item><item><title>sense-rs</title><link>https://jr0.org/projects/sense-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sense-rs/</guid><description>See on GitHub
sense-rs Sense the directories around you, are they git repositories, what language, etc.
Languages :snake: sense-py || :crab: sense-rs || :hamster: gosense || üá® sense-c
Why? Why so many langs? Because I write projects pretty regularly in all of these languages and want a consistent API and available library support for all of them.
API Git has_git(path: String) -&amp;gt; bool; is_local_git(path: String) -&amp;gt; bool; Language get_lang(path: String) -&amp;gt; Lang; Example fn main() { let language = get_lang(&amp;#34;.</description></item><item><title>September 2022</title><link>https://jr0.org/devlogs/september-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/devlogs/september-2022/</guid><description>T3 research I finished the first draft of my collaborative paper, titled Observations on Every Third Digit of the Thue-Morse Sequence. It is still waiting peer review, but all of the content is finished.
Abstract We investigate some interesting properties of the sequence made up of every third term of the Thue-Morse sequence, and consider other similar sequences.
The paper can be found at jr0.org/research/t3.
Follow up paper The same people involved in t3 will continue to work on a follow up paper that takes a similar problems into consideration.</description></item><item><title>server-public</title><link>https://jr0.org/projects/server-public/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/server-public/</guid><description>See on GitHub
1678 Server 2019-2020 Run setup_environment.py when you clone the repository.
This will install a virtual python environment in the main project directory. It will then install the external dependencies into this environment from PyPI using pip. (This will NOT install any non-python dependencies such as MongoDB, as the process for that depends on your distribution. You will have to do that manually).
When testing from the command line, remember to activate the virtual environment (source .</description></item><item><title>sfetch</title><link>https://jr0.org/projects/sfetch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sfetch/</guid><description>See on GitHub
sfetch A very simple fetch</description></item><item><title>Shredder</title><link>https://jr0.org/projects/shredder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/shredder/</guid><description>See on GitHub
Shredder Instead of sredding files normally, replace all of the data with Random Star Wars Quotes.</description></item><item><title>Shuzhengz</title><link>https://jr0.org/projects/shuzhengz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/shuzhengz/</guid><description>See on GitHub</description></item><item><title>SignInWebApp</title><link>https://jr0.org/projects/signinwebapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/signinwebapp/</guid><description>See on GitHub
SignInWebApp</description></item><item><title>Skyometer</title><link>https://jr0.org/projects/skyometer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/skyometer/</guid><description>See on GitHub
404: Not Found</description></item><item><title>snow_script</title><link>https://jr0.org/projects/snow_script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/snow_script/</guid><description>See on GitHub
snow_script A macro language with low level macros like if statements, jumps, and memory control and high level futures like memory dump, type, type casting, push, and calc
Dependencies pip3 install -r requirements.txt
Install sudo ./impulse.build
Running ssc filename.ssc
Testing Configure python3 conftest.py
Test pytest
Syntax view syntax.txt for macros and uses</description></item><item><title>sodium</title><link>https://jr0.org/projects/sodium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sodium/</guid><description>See on GitHub
Sodium: Vim 2.0 Sodium is an editor inspired by Vim (but not a clone). It aims to be efficient, fast, and productive.
Library Requirements Sodium requires the sdl2 library in order to build. To install on Ubuntu, use the following command: sudo apt-get install libsdl2-dev
Build Use cargo run --features orbital in order to build the program.</description></item><item><title>Software Club</title><link>https://jr0.org/p/software-club/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/software-club/</guid><description/></item><item><title>SoftwareGeneralFinalTests</title><link>https://jr0.org/projects/softwaregeneralfinaltests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/softwaregeneralfinaltests/</guid><description>See on GitHub
SoftwareGeneralFinalTests</description></item><item><title>sort-vis</title><link>https://jr0.org/projects/sort-vis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sort-vis/</guid><description>See on GitHub
sort-vis Visualizes sorting alogithims using p5 js Requirements
Requires a local node server Install/Setup
Install node.js by running &amp;ldquo;npm install http-server&amp;rdquo; Then while in the sort-vis folder run &amp;ldquo;http-server&amp;rdquo; Finally connect to &amp;ldquo;http://localhost:8080/&amp;rdquo; and open sort-vis.html</description></item><item><title>sorting-algorithms</title><link>https://jr0.org/projects/sorting-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sorting-algorithms/</guid><description>See on GitHub
sorting-algorithms This repository contains a variety of sorting algorithms written in several programming languages. Currently, it contains the selection and insertion sort algorithms implemented using Java and Python. More languages and algorithms will be added in the future.</description></item><item><title>spaceapp</title><link>https://jr0.org/projects/spaceapp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spaceapp/</guid><description>See on GitHub
spaceapp Telescope Aiming tool</description></item><item><title>spicetify-cli-extensions</title><link>https://jr0.org/projects/spicetify-cli-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spicetify-cli-extensions/</guid><description>See on GitHub
spicetify-cli-extensions This is a place for an assortment of small extensions for spicetify
autoSkipSadSongs.js Skip sad songs by block listing the artist or the title. Add autoSkipSadSongs.js to your spicetify config under extensions.</description></item><item><title>spicetify-cli-themes</title><link>https://jr0.org/projects/spicetify-cli-themes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spicetify-cli-themes/</guid><description>See on GitHub
spicetify-cli-themes A collection of tweaked and custom themes for spicetify-cli
Tree-Green A nice calming tree green based on Pop-Dark</description></item><item><title>spicetify-customapps</title><link>https://jr0.org/projects/spicetify-customapps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spicetify-customapps/</guid><description>See on GitHub
Summary üî• A central location for custom apps and extensions for spicetify-cli üëÄ More features üéâ Open source How to add Custom Apps or Extensions to Spicetify Install spicetify-cli using the instructions found here Click on the green Clone or download button at the top right this repo and choose Download ZIP Unzip the .zip file Choose the app that you want and drag it out of the folder Open the spicetify-cli CustomApps folder (paths can be found below) Drag the custom app into the CustomApps folder Open config.</description></item><item><title>spicetify-themes</title><link>https://jr0.org/projects/spicetify-themes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spicetify-themes/</guid><description>See on GitHub
spicetify community themes This is a collection of themes for spicetify, a command-line tool to customize Spotify; you can add your own theme simply by opening a Pull Requests (more info in the Contributions section).
You can find a preview of all the themes in the wiki. Installation and usage (If you use Arch Linux you can find this project on the AUR)
Once you cloned the repository you&amp;rsquo;ll need to put the files into the Themes folder.</description></item><item><title>spinners</title><link>https://jr0.org/projects/spinners/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/spinners/</guid><description>See on GitHub
Spinners - üõé 60+ Elegant terminal spinners for Rust ‚ù§Ô∏è Shameless plug Charts, simple as a URL. No more server-side rendering pain, 1 url = 1 chart Keycloak Identity and Access Management (IAM) as a Service Install See Cargo page
Usage use spinners; use spinners::{Spinner, Spinners}; use std::thread::sleep; use std::time::Duration; fn main() { let sp = Spinner::new(Spinners::Dots9, &amp;#34;Waiting for 3 seconds&amp;#34;.into()); sleep(Duration::from_secs(3)); sp.stop(); } List of available spinners Documentation Example cargo run --example cycle cargo run --example simple License MIT ¬© Fran√ßois-Guillaume Ribreau</description></item><item><title>sqlite-cpp</title><link>https://jr0.org/projects/sqlite-cpp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sqlite-cpp/</guid><description>See on GitHub
sqlite-cpp Part of a learning project for an app with a C++ backend.</description></item><item><title>SQLShortener</title><link>https://jr0.org/projects/sqlshortener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/sqlshortener/</guid><description>See on GitHub
SQLShortener Create short url with New, Use short url with Use
Start python3 app.py
Use localhost:5000/ex -&amp;gt; https://example.com
New localhost:5000/new/example.com!ex</description></item><item><title>stackoverflow-search-intellij</title><link>https://jr0.org/projects/stackoverflow-search-intellij/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/stackoverflow-search-intellij/</guid><description>See on GitHub
Stack Overflow Search IntelliJ IntelliJ plugin to search code on stackoverflow, inspired by @JakeRoggenbuck&amp;rsquo;s Stack Overflow Search Vim
Work in progess</description></item><item><title>stackoverflow-search-vim</title><link>https://jr0.org/projects/stackoverflow-search-vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/stackoverflow-search-vim/</guid><description>See on GitHub
Stack Overflow Search Vim Inspired by a conversation with @Shuzhengz. Still a work in progress.
Task List Function to return currently highlighted text Function to open xdg default browser with stackoverflow query Fix search function to escape spaces in search Make keybind for function that does both</description></item><item><title>statistical-tests-rs</title><link>https://jr0.org/projects/statistical-tests-rs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/statistical-tests-rs/</guid><description>See on GitHub
statistical-tests-rs Statistical Tests for Rust
Examples use statistical_tests_rs::mean; fn main() { // Get the mean of an array let array: [f64; 4] = [3.4, 6.7, 2.3, 1.1]; let m = mean(&amp;amp;array); println!(&amp;#34;{}&amp;#34;, m); } use statistical_tests_rs::{GetStatistics, SampleStatistics}; fn main() { // Get the statistics of a sample let samp = SampleStatistics::from_array(&amp;amp;array); println!( &amp;#34;Sample Mean: {}, Sample Standard Deviation: {}&amp;#34;, samp.sample_mean, samp.standard_error ); }</description></item><item><title>Stats Project 2022</title><link>https://jr0.org/p/stats-project-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/p/stats-project-2022/</guid><description>Jupyter Lab for the project - Graphs.ipynb</description></item><item><title>stow-squid</title><link>https://jr0.org/projects/stow-squid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/stow-squid/</guid><description>See on GitHub
ü¶ë stow-squid 0.1.2 Stow your dotfiles
Install git clone https://github.com/JakeRoggenbuck/stow-squid.git cd stow-squid cargo install --path . # Add config to ~/.config/stow-squid/stow-squid.toml mkdir -p ~/.config/stow-squid/ &amp;amp;&amp;amp; cp example-config.toml ~/.config/stow-squid/stow-squid.toml Verbs For all verbs, the name is of a specific dotfile and is optional. Including a name will only run the verb on that dotfile. Without a name, it will run the verb on all the dots in the config.</description></item><item><title>strategy_presentation_numpy</title><link>https://jr0.org/projects/strategy_presentation_numpy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/strategy_presentation_numpy/</guid><description>See on GitHub
404: Not Found</description></item><item><title>structured-data-format-SoC-first-week</title><link>https://jr0.org/projects/structured-data-format-soc-first-week/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/structured-data-format-soc-first-week/</guid><description>See on GitHub
structured-data-format-SoC-first-week Summer Of Code (SoC) First Week - Structured Data Format
This week&amp;rsquo;s challenge Build a new and unique structured data format similar to JSON or TOML with at least two intentional design decisions that improve upon some aspect of an existing data structure format.
How to participate Fork this repo and start your work in your fork of the project! Projects are due on Sunday the 31st at 9pm PDT.</description></item><item><title>study-cli</title><link>https://jr0.org/projects/study-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/study-cli/</guid><description>See on GitHub
study-cli CLI tool to quiz and learn a question dataset. This can be used for memorizing any sort of multiple choice compliant quizzes. Similar to flashcards, except no need to write out flash cards, or carry them with you. Also, study-cli can be set to random ask if you&amp;rsquo;d like to study at random times.
Question Set Schema type Single struct { Name string `json:&amp;#34;name&amp;#34;` Correct int `json:&amp;#34;correct&amp;#34;` Answers []string `json:&amp;#34;answers&amp;#34;` Question string `json:&amp;#34;question&amp;#34;` } [ { &amp;#34;name&amp;#34;: &amp;#34;question one&amp;#34;, &amp;#34;correct&amp;#34;: 0, &amp;#34;answers&amp;#34;: [ &amp;#34;A.</description></item><item><title>tap</title><link>https://jr0.org/projects/tap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/tap/</guid><description>See on GitHub
Tap Quickly tap basic file into existence
Help # create an empty python file tap it py # create an empty python file with argparse boilerplate tap it pyarg TODO Also have an --output option for making PYTHON_ARG into anything given as --output Add more defaults Add scripts like cargo init &amp;amp;&amp;amp; then copy file Add name inserting from config or username Add year inserting for copyright or license</description></item><item><title>tbaTestScripts</title><link>https://jr0.org/projects/tbatestscripts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/tbatestscripts/</guid><description>See on GitHub
tbaTestScripts TBA API key Create an api key API docs Make a api_key.py file Add request_headers = {&amp;lsquo;X-TBA-Auth-Key&amp;rsquo;: &amp;lsquo;Your Key Here&amp;rsquo;} Uses averageBumperColor.py In averageBumperColor.py the url event/{event_code}/matches/simple is used. Example of the event_code could be 2020caln. The feilds used are [&amp;quot;alliances&amp;quot;][&amp;quot;blue&amp;quot;][&amp;quot;team_keys&amp;quot;] and [&amp;quot;alliances&amp;quot;][&amp;quot;red&amp;quot;][&amp;quot;team_keys&amp;quot;] The data it returns is a json of the average bumper/alliance color used
{ &amp;#39;frc6560&amp;#39;: -4, &amp;#39;frc115&amp;#39;: 0, &amp;#39;frc114&amp;#39;: -6, &amp;#39;frc1678&amp;#39;: -6 } matchColorMaker.</description></item><item><title>Terbot-2</title><link>https://jr0.org/projects/terbot-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/terbot-2/</guid><description>See on GitHub
Terbot-2</description></item><item><title>termcolor-c</title><link>https://jr0.org/projects/termcolor-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/termcolor-c/</guid><description>See on GitHub
termcolor-c Simple color printing in C
Example #include &amp;#34;termcolor.h&amp;#34; #include &amp;lt;stdio.h&amp;gt; int main() { cprint(&amp;#34;Passed\n&amp;#34;, FG_GREEN); cprint(&amp;#34;Failed\n&amp;#34;, FG_RED); char *msg = &amp;#34;Hello!!&amp;#34;; char *new; color(msg, new, FG_BLUE); printf(&amp;#34;%s\n&amp;#34;, new); return 0; } Why I made this just in case I start writing a bunch of CLI stuff in C in the next few months before college, and during college as well. So far, here are my favorites:</description></item><item><title>termcolor-yf</title><link>https://jr0.org/projects/termcolor-yf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/termcolor-yf/</guid><description>See on GitHub
termcolor-yf Install yfin install jakeroggenbuck/termcolor-yf</description></item><item><title>Termitebot</title><link>https://jr0.org/projects/termitebot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/termitebot/</guid><description>See on GitHub
Termitebot Copy and update termite configs.</description></item><item><title>timely</title><link>https://jr0.org/projects/timely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/timely/</guid><description>See on GitHub
Timely Keep track of work hour in the command line
Why If you work remotely and need to log a certain amount of hours a week and may have a hard time keeping track, timely can help you track your start and end time of work sessions in the terminal.
Usage Usage of timely: -check Set to check -inline No newline after print -no-color No color output -no-word No word in output -off Set to off -toggle Set to toggle -work Set to work Add to prompt In your bashrc or similar</description></item><item><title>tlib</title><link>https://jr0.org/projects/tlib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/tlib/</guid><description>See on GitHub
tlib Fork of Adam Hutchings&amp;rsquo; tlib</description></item><item><title>typeschemalib</title><link>https://jr0.org/projects/typeschemalib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/typeschemalib/</guid><description>See on GitHub
typeschemalib A yaml like schema that can be used to check dictionaries for correct schema
Schema file schema example point: Int my_string: Str grade: Float data example {&amp;#34;point&amp;#34;: 45, &amp;#34;my_string&amp;#34;: &amp;#34;Hey&amp;#34;, &amp;#34;grade&amp;#34;: 4.5} Checking data for correct schema Test parse with stml file from typeschemalib import typeschemalib if __name__ == &amp;#34;__main__&amp;#34;: data = {&amp;#34;point&amp;#34;: 45, &amp;#34;my_string&amp;#34;: &amp;#34;Hey&amp;#34;, &amp;#34;grade&amp;#34;: 4.5} # Validate data from schema file schema = &amp;#34;test.</description></item><item><title>ursina</title><link>https://jr0.org/projects/ursina/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ursina/</guid><description>See on GitHub
ursina  ï ‚Ä¢·¥•‚Ä¢ î„Çù‚ñ° An easy to use game engine/framework for python.
Getting Started Install Python 3.6 or newer. https://www.python.org/downloads/
Open cmd/terminal and type:
pip install ursina If you want to install the newest version from git, you can install like this:
pip install git+https://github.com/pokepetter/ursina.git If you want to easily edit the source, it&amp;rsquo;s recommended to clone the git repo and install as develop like this. Make sure you have git installed.</description></item><item><title>ursina-platform-game</title><link>https://jr0.org/projects/ursina-platform-game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/ursina-platform-game/</guid><description>See on GitHub
ursina-platform-game</description></item><item><title>valueourminds_website</title><link>https://jr0.org/projects/valueourminds_website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/valueourminds_website/</guid><description>See on GitHub
valueourminds_website</description></item><item><title>vim-character-creator</title><link>https://jr0.org/projects/vim-character-creator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vim-character-creator/</guid><description>See on GitHub
vim-character-creator character-creator only has dice rolling functionality as of 0.2 with lots more features coming soon. Role: role a dice in vim Example: run &amp;lsquo;:echo Character_Creator_Roll(&amp;ldquo;1d8&amp;rdquo;)&amp;rsquo; Options: have the number of dice before the &amp;rsquo;d&amp;rsquo; and the dice value after</description></item><item><title>vim-game-snake</title><link>https://jr0.org/projects/vim-game-snake/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vim-game-snake/</guid><description>See on GitHub
VimGameSnake version 0.1
How to play :VimGameSnake to Start :echo g:VimSnakeScore to view score
h j k l c q ‚Üê ‚Üì ‚Üë ‚Üí end game quit Installation VimPlug Place this in your .vimrc:
Plug &amp;lsquo;johngrib/vim-game-snake&amp;rsquo;
Then run the following in Vim:
:source %
:PlugInstall</description></item><item><title>vim-impulse-syntax</title><link>https://jr0.org/projects/vim-impulse-syntax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vim-impulse-syntax/</guid><description>See on GitHub
vim-impulse-syntax vim-impulse-syntax.vim - Impulse build syntax highlighting</description></item><item><title>vim-selection-test</title><link>https://jr0.org/projects/vim-selection-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vim-selection-test/</guid><description>See on GitHub
vim-selection-test vim-selection-test.vim - A test of calling a function with selected text</description></item><item><title>vim-snow-script-syntax</title><link>https://jr0.org/projects/vim-snow-script-syntax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vim-snow-script-syntax/</guid><description>See on GitHub
vim-snow-script-syntax</description></item><item><title>vimage.vim</title><link>https://jr0.org/projects/vimage.vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vimage.vim/</guid><description>See on GitHub
vimage.vim vimage.vim - Open image paths in vim
Install Plug jakeroggenbuck/vimage.vim
Use Set image viewer let g:image_viewer = &amp;quot;feh&amp;quot; Set key binding nmap &amp;lt;leader&amp;gt;mg :call Vimage()&amp;lt;CR&amp;gt;</description></item><item><title>Vorahk</title><link>https://jr0.org/projects/vorahk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vorahk/</guid><description>See on GitHub
Galrux A Discord bot designed for adding music to a queue. This was specifically requested for a server.</description></item><item><title>vosk-api</title><link>https://jr0.org/projects/vosk-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vosk-api/</guid><description>See on GitHub
Vosk Speech Recognition Toolkit Vosk is an offline open source speech recognition toolkit. It enables speech recognition for 20+ languages and dialects - English, Indian English, German, French, Spanish, Portuguese, Chinese, Russian, Turkish, Vietnamese, Italian, Dutch, Catalan, Arabic, Greek, Farsi, Filipino, Ukrainian, Kazakh, Swedish, Japanese, Esperanto. More to come.
Vosk models are small (50 Mb) but provide continuous large vocabulary transcription, zero-latency response with streaming API, reconfigurable vocabulary and speaker identification.</description></item><item><title>Vyxal</title><link>https://jr0.org/projects/vyxal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/vyxal/</guid><description>See on GitHub
Vyxal - Terse, Elegant and Readable Vyxal is the latest addition to the plethora of stack-based languages used for code golfing. But unlike its competitors, Vyxal has a special focus upon readability and elegancy. Indeed, the codepage has been specially chosen to be as mnemonic as possible. Further, constructs from practical languages (such as functions, lambdas and easy list manipulation) are present.
(Vyxal is pronounced Vikesal)
How to use the interpreter: python3 Vyxal.</description></item><item><title>wallpaper_downloader</title><link>https://jr0.org/projects/wallpaper_downloader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/wallpaper_downloader/</guid><description>See on GitHub
wallpaper_downloader</description></item><item><title>xdotool_python_window_util</title><link>https://jr0.org/projects/xdotool_python_window_util/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/xdotool_python_window_util/</guid><description>See on GitHub
xdotool_python_window_util Use Size from main import Size a = Size(40, 60) a.size_win() Move from main import Move a = Move(True, 20, 30) a.move_win() Test PYTHONPATH=./src pytest Future Features Something to name windows Something to use move and size with window by name Something to get the size and position of a window by name Something that uses the size and position of two windows by name and calculates distance between</description></item><item><title>yaml_serialize</title><link>https://jr0.org/projects/yaml_serialize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yaml_serialize/</guid><description>See on GitHub
yaml_serialize A simple way to store python objects in yaml
Use from src import yaml_serialize class MyObject: def __init__(self): self.name = &amp;#34;Jake&amp;#34; self.age = 16 self.favorite_color = &amp;#34;Green&amp;#34; self.mylist = [&amp;#34;hey&amp;#34;, &amp;#34;this&amp;#34;, &amp;#34;is&amp;#34;, &amp;#34;cool&amp;#34;] my_object = MyObject() serializer = yaml_serialize.Serialize(my_object) # Get serialized object as string my_serialized_object = serializer.get() # Write serialized object with class name &amp;#34;MyObject.yml&amp;#34; serializer.write() # Write serialized object with custom name &amp;#34;MyCoolObject.yml&amp;#34; serializer.write(&amp;#34;MyCoolObject.yml&amp;#34;) des = yaml_serialize.</description></item><item><title>yes-no-neural-network-classifier</title><link>https://jr0.org/projects/yes-no-neural-network-classifier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yes-no-neural-network-classifier/</guid><description>See on GitHub
yes-no-neural-network-classifier</description></item><item><title>yf-package-example</title><link>https://jr0.org/projects/yf-package-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yf-package-example/</guid><description>See on GitHub
yf-package-example Install yfin install jakeroggenbuck/yf-package-example</description></item><item><title>yfc</title><link>https://jr0.org/projects/yfc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yfc/</guid><description>See on GitHub
yfc Overview Compiler for the Y-flat programming language. This is part of the wider Y-flat programming language project, which includes the installer and other components in the future.
Y-flat programming language project Build ./scripts/build.sh
Run ./cmake/yfc</description></item><item><title>yfin</title><link>https://jr0.org/projects/yfin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yfin/</guid><description>See on GitHub
yfin 0.1.2 Yfin is the Official package manager for the Y-flat programming language. Yfin allows the user to install, upgrade, and uninstall packages. It also allows a user to initialize a package with the Y-flat package structure and files automatically generated. In future, Yfin will also allow users to publish packages.
Usage yfin &amp;lt;SUBCOMMAND&amp;gt; Flags -h, --help Prints help information -V, --version Prints version information Subcommands help Prints this message or the help of the given subcommand(s) init Initialize a package install Install from git repo url install-compiler Install compiler yfin install-compiler install-yflib Install yflib yfin install-yflib uninstall Uninstall package upgrade Install newer version of package Install Latest If you have cargo on your machine, skip to step 3</description></item><item><title>yflat-docs</title><link>https://jr0.org/projects/yflat-docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yflat-docs/</guid><description>See on GitHub
yflat-docs Documentation for all parts of Y-flat.
Files Y-flat description and examples</description></item><item><title>Yutimim-dictionary-parser</title><link>https://jr0.org/projects/yutimim-dictionary-parser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/yutimim-dictionary-parser/</guid><description>See on GitHub
Yutimim-dictionary-parser Usage # Output to screen python3 main.py -i dict.txt -v # Output to file python3 main.py -i dict.txt -o dict.json Example Input (Fake words) auau- 1. te de (v.) eueue- 1. ta da jejj- 1. to da (v.) uueu- 1. to do (v.) Output [ { &amp;#34;word&amp;#34;: &amp;#34;auau-&amp;#34;, &amp;#34;defs&amp;#34;: [&amp;#34;te de (v.)&amp;#34;] }, { &amp;#34;word&amp;#34;: &amp;#34;eueue-&amp;#34;, &amp;#34;defs&amp;#34;: [&amp;#34;ta da&amp;#34;] }, { &amp;#34;word&amp;#34;: &amp;#34;jejj-&amp;#34;, &amp;#34;defs&amp;#34;: [&amp;#34;to da (v.</description></item><item><title>zerOS</title><link>https://jr0.org/projects/zeros/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/zeros/</guid><description>See on GitHub
zerOS an os? based on arch</description></item><item><title>zflat</title><link>https://jr0.org/projects/zflat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/zflat/</guid><description>See on GitHub
Z-Flat Overview Z-flat is a compiled, statically-typed programming language. Its design goals are intuitive syntax, type-safety, and easy library management.
Repository Overview std - standard library folder zfc - the Z-flat compiler docs - all documentation
Syntax highlighting Vim JakeRoggenbuck/zflat.vim Others Please help us grow the zflat community and add support for your favorite tools Building run ./scripts/build.sh to start the build process Running run the compiler at .</description></item><item><title>zflat.vim</title><link>https://jr0.org/projects/zflat.vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/zflat.vim/</guid><description>See on GitHub
zflat.vim A syntax highlighting for zflat lang files
Install Plug &amp;#39;jakeroggenbuck/zflat.vim&amp;#39;</description></item><item><title>zipfs-law</title><link>https://jr0.org/projects/zipfs-law/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jr0.org/projects/zipfs-law/</guid><description>See on GitHub
zipfs-law ranked = sorted(RANK.items(), key=lambda x: x[1], reverse=True) most_used = &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34;.join([f&amp;#34;- {x}: {y}\n&amp;#34; for x, y in ranked[:10]]) least_used = &amp;#34;\n&amp;#34; + &amp;#34;&amp;#34;.join([f&amp;#34;- {x}: {y}\n&amp;#34; for x, y in ranked[-10:]])</description></item></channel></rss>